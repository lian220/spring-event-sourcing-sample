INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-e07b06ef-b0c4-4b8d-aa84-fb2453bf0a4b sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 08:44:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 08:44:53[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 08:44:53[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 08:44:53[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 08:45:00[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 30396 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 08:45:00[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 36 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 108 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:45:01[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 08:45:02[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 08:45:02[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 08:45:02[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 08:45:02[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 08:45:03[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 08:45:03[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2482 ms
INFO  23-06-13 08:45:03[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 08:45:03[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 08:45:03[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 08:45:03[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 08:45:03[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 08:45:03[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 08:45:04[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 08:45:04[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 08:45:05[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 08:45:06[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 08:45:06[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 08:45:06[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 08:45:06[main] [AppInfoParser:121] - Kafka startTimeMs: 1686613506845
INFO  23-06-13 08:45:06[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 08:45:06[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 08:45:06[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 08:45:07[main] [ApiApplication:61] - Started ApiApplication in 7.503 seconds (JVM running for 8.283)
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=191, memberId='consumer-foo-1-de3ebee4-2e2e-422f-a63e-b5259f597286', protocol='range'}
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 191: {consumer-foo-1-de3ebee4-2e2e-422f-a63e-b5259f597286=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=191, memberId='consumer-foo-1-de3ebee4-2e2e-422f-a63e-b5259f597286', protocol='range'}
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 08:45:07[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-de3ebee4-2e2e-422f-a63e-b5259f597286 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 08:57:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 08:57:53[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 08:57:53[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 08:57:53[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 08:57:55[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 24004 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 08:57:55[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 08:57:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 109 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 08:57:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 08:57:58[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 08:57:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 08:57:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 08:57:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 08:57:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 08:57:58[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2609 ms
INFO  23-06-13 08:57:58[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 08:57:58[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 08:57:59[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 08:57:59[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 08:57:59[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 08:57:59[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 08:58:00[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 08:58:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 08:58:00[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 08:58:00[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 08:58:00[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 08:58:00[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 08:58:00[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 08:58:00[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 08:58:00[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 09:29:04[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 2212 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 09:29:04[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 98 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:29:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 09:29:06[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 09:29:06[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 09:29:06[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 09:29:06[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 09:29:07[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 09:29:07[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2681 ms
INFO  23-06-13 09:29:07[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 09:29:07[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 09:29:07[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 09:29:07[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 09:29:07[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 09:29:07[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 09:29:08[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 09:29:08[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 09:29:09[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 09:29:09[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 09:29:09[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 09:29:09[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 09:29:09[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 09:29:09[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 09:29:09[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 09:31:12[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43816 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 09:31:12[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 113 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 09:31:13[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 25 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 09:31:14[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 09:31:14[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 09:31:14[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 09:31:14[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 09:31:14[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 09:31:14[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2615 ms
INFO  23-06-13 09:31:15[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 09:31:15[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 09:31:15[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 09:31:15[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 09:31:15[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 09:31:15[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 09:31:16[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 09:31:16[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 09:31:16[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 09:31:16[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 09:31:16[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 09:31:16[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 09:31:16[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 09:31:16[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 09:31:17[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:27:09[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 38260 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:27:09[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 102 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 16 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:27:11[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:27:11[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:27:11[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:27:11[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:27:11[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:27:11[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2280 ms
INFO  23-06-13 10:27:12[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:27:12[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:27:12[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:27:12[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:27:12[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:27:12[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:27:13[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:27:13[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:27:14[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:27:14[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:27:14[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:27:14[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:27:14[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:27:14[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:27:14[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:27:41[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 24048 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:27:41[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 102 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:27:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:27:43[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:27:43[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:27:43[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:27:43[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:27:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:27:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2482 ms
INFO  23-06-13 10:27:44[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:27:44[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:27:44[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:27:44[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:27:45[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:27:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:27:45[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:27:45[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:27:46[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 10:27:48[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 10:27:48[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 10:27:48[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 10:27:48[main] [AppInfoParser:121] - Kafka startTimeMs: 1686619668156
INFO  23-06-13 10:27:48[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 10:27:48[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:27:48[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 10:27:48[main] [ApiApplication:61] - Started ApiApplication in 7.56 seconds (JVM running for 8.294)
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=193, memberId='consumer-foo-1-1db9b89b-f7c8-403d-a919-218b3343f12e', protocol='range'}
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 193: {consumer-foo-1-1db9b89b-f7c8-403d-a919-218b3343f12e=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=193, memberId='consumer-foo-1-1db9b89b-f7c8-403d-a919-218b3343f12e', protocol='range'}
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:27:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-1db9b89b-f7c8-403d-a919-218b3343f12e sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 10:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 10:29:08[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:29:08[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:29:08[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:29:32[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 17272 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:29:32[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:33[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:29:34[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:29:34[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:29:34[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:29:34[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:29:35[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:29:35[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2631 ms
INFO  23-06-13 10:29:35[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:29:35[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:29:35[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:29:35[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:29:35[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:29:35[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:29:36[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:29:36[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:29:37[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:29:37[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:29:37[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:29:37[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:29:37[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:29:37[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:29:37[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:29:58[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 3084 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:29:58[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 139 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:29:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:30:00[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:30:00[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:30:00[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:30:00[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:30:01[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:30:01[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2762 ms
INFO  23-06-13 10:30:01[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:30:01[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:30:02[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:30:02[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:30:02[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:30:02[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:30:03[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:30:03[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:30:04[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 10:30:05[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 10:30:05[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 10:30:05[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 10:30:05[main] [AppInfoParser:121] - Kafka startTimeMs: 1686619805780
INFO  23-06-13 10:30:05[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 10:30:05[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:30:05[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 10:30:06[main] [ApiApplication:61] - Started ApiApplication in 8.343 seconds (JVM running for 9.118)
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=195, memberId='consumer-foo-1-0488b1d6-db14-43f4-a02e-5c4640070fd7', protocol='range'}
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 195: {consumer-foo-1-0488b1d6-db14-43f4-a02e-5c4640070fd7=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=195, memberId='consumer-foo-1-0488b1d6-db14-43f4-a02e-5c4640070fd7', protocol='range'}
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:30:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:30:10[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 10:30:10[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 10:30:10[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 10:30:24[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventStore.saveEvents(web.api.eventSourcing.model.Cart)" because "this.eventStore" is null
INFO  23-06-13 10:31:08[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:31:08[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventStore.saveEvents(web.api.eventSourcing.model.Cart)" because "this.eventStore" is null
INFO  23-06-13 10:31:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:31:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 10:31:09[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 10:31:09[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:31:09[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:31:09[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:31:11[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 21024 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:31:11[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 123 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:31:12[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:31:13[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:31:13[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:31:13[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:31:13[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:31:14[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:31:14[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2642 ms
INFO  23-06-13 10:31:14[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:31:14[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:31:14[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:31:14[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:31:14[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:31:14[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:31:15[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:31:15[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:31:16[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 10:31:18[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 10:31:18[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 10:31:18[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 10:31:18[main] [AppInfoParser:121] - Kafka startTimeMs: 1686619878782
INFO  23-06-13 10:31:18[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 10:31:18[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:31:18[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 10:31:19[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 10:31:19[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 10:31:19[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-13 10:31:19[main] [ApiApplication:61] - Started ApiApplication in 8.839 seconds (JVM running for 9.64)
INFO  23-06-13 10:31:21[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "java.lang.Long.longValue()" because the return value of "web.api.eventSourcing.model.Cart.getVersion()" is null
INFO  23-06-13 10:31:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 10:31:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:31:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:31:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=197, memberId='consumer-foo-1-bd2b0852-0bf2-47a6-a901-398071bc6fc7', protocol='range'}
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 197: {consumer-foo-1-bd2b0852-0bf2-47a6-a901-398071bc6fc7=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=197, memberId='consumer-foo-1-bd2b0852-0bf2-47a6-a901-398071bc6fc7', protocol='range'}
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:31:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:31:37[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "java.lang.Long.longValue()" because the return value of "web.api.eventSourcing.model.Cart.getVersion()" is null
INFO  23-06-13 10:31:48[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "java.lang.Long.longValue()" because the return value of "web.api.eventSourcing.model.Cart.getVersion()" is null
INFO  23-06-13 10:32:22[http-nio-8090-exec-10] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "java.lang.Long.longValue()" because the return value of "web.api.eventSourcing.model.Cart.getVersion()" is null
INFO  23-06-13 10:32:58[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:32:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=197, memberId='consumer-foo-1-bd2b0852-0bf2-47a6-a901-398071bc6fc7', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 10:33:00[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "java.lang.Long.longValue()" because the return value of "web.api.eventSourcing.model.Cart.getVersion()" is null
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=199, memberId='consumer-foo-1-d517b868-f81d-4f32-bf0d-494b882dc0c4', protocol='range'}
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 199: {consumer-foo-1-d517b868-f81d-4f32-bf0d-494b882dc0c4=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=199, memberId='consumer-foo-1-d517b868-f81d-4f32-bf0d-494b882dc0c4', protocol='range'}
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:33:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:33:11[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:33:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:33:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:33:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:33:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=199, memberId='consumer-foo-1-d517b868-f81d-4f32-bf0d-494b882dc0c4', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:33:15[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=201, memberId='consumer-foo-1-5c980279-29be-4707-b1f5-534917af66ba', protocol='range'}
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 201: {consumer-foo-1-5c980279-29be-4707-b1f5-534917af66ba=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=201, memberId='consumer-foo-1-5c980279-29be-4707-b1f5-534917af66ba', protocol='range'}
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:33:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:33:23[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventProjector.handle(web.api.eventSourcing.model.Cart)" because "this.eventProjector" is null
INFO  23-06-13 10:33:49[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 10:34:09[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventProjector.handle(web.api.eventSourcing.model.Cart)" because "this.eventProjector" is null
INFO  23-06-13 10:34:33[http-nio-8090-exec-6] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 10:34:40[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventProjector.handle(web.api.eventSourcing.model.Cart)" because "this.eventProjector" is null
WARN  23-06-13 10:35:29[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m1s496ms138µs500ns).
INFO  23-06-13 10:35:29[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:35:29[http-nio-8090-exec-8] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=201, memberId='consumer-foo-1-5c980279-29be-4707-b1f5-534917af66ba', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=203, memberId='consumer-foo-1-1abca4d4-fb40-4818-b39b-b66334653fad', protocol='range'}
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 203: {consumer-foo-1-1abca4d4-fb40-4818-b39b-b66334653fad=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=203, memberId='consumer-foo-1-1abca4d4-fb40-4818-b39b-b66334653fad', protocol='range'}
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:35:29[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-1abca4d4-fb40-4818-b39b-b66334653fad sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 10:35:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 10:35:32[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:35:32[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:35:32[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:35:33[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 36468 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:35:33[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 102 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:35:35[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 34 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:35:35[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:35:35[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:35:35[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:35:35[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:35:36[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:35:36[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2418 ms
INFO  23-06-13 10:35:36[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:35:36[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:35:36[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:35:37[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:35:37[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:35:37[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:35:37[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:35:37[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:35:38[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:35:38[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:35:38[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:35:38[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:35:38[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:35:38[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:35:38[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:36:30[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 16956 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:36:30[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 147 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:31[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:36:32[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:36:32[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:36:32[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:36:32[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:36:33[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:36:33[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2537 ms
INFO  23-06-13 10:36:33[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:36:33[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:36:33[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:36:33[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:36:33[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:36:33[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:36:34[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:36:34[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:36:35[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:36:35[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:36:35[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:36:35[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:36:35[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:36:35[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:36:35[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:36:57[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 16780 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:36:57[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 130 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:36:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:37:00[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:37:00[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:37:00[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:37:00[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:37:00[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:37:00[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2520 ms
INFO  23-06-13 10:37:00[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:37:00[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:37:01[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:37:01[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:37:01[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:37:01[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:37:02[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:37:02[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:37:02[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:37:02[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:37:02[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:37:02[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:37:02[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:37:02[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:37:02[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:37:14[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 41788 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:37:14[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 32 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:37:17[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:37:17[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:37:17[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:37:17[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:37:17[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:37:17[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2636 ms
INFO  23-06-13 10:37:17[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:37:17[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:37:17[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:37:18[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:37:18[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:37:18[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:37:18[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:37:19[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:37:19[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:37:19[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:37:19[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:37:19[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:37:19[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:37:19[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:37:19[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:37:52[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 7524 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:37:52[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 104 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:37:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:37:54[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:37:54[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:37:54[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:37:54[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:37:55[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:37:55[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2525 ms
INFO  23-06-13 10:37:55[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:37:55[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:37:55[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:37:55[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:37:55[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:37:55[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:37:56[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:37:56[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:37:57[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:37:57[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:37:57[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:37:57[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:37:57[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:37:57[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:37:57[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:38:08[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 26040 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:38:08[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 57 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 128 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:38:10[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:38:10[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:38:10[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:38:10[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:38:11[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:38:11[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2564 ms
INFO  23-06-13 10:38:11[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:38:11[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:38:11[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:38:12[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:38:12[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:38:12[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:38:12[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:38:12[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:38:13[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:38:13[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:38:13[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:38:13[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:38:13[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:38:13[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:38:13[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:38:54[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42896 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:38:54[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 38 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 118 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:38:56[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 25 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:38:57[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:38:57[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:38:57[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:38:57[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:38:57[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:38:57[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2512 ms
INFO  23-06-13 10:38:57[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:38:57[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:38:58[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:38:58[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:38:58[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:38:58[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:38:59[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:38:59[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:38:59[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:38:59[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:38:59[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:38:59[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:38:59[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:38:59[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:38:59[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:39:14[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 15508 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:39:14[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 116 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:39:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:39:16[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:39:16[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:39:16[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:39:16[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:39:16[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:39:16[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2403 ms
INFO  23-06-13 10:39:17[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:39:17[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:39:17[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:39:17[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:39:17[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:39:17[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:39:18[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:39:18[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:39:19[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:39:19[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:39:19[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:39:19[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:39:19[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:39:19[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:39:19[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:40:15[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 29164 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:40:15[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 118 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:40:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:40:17[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:40:17[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:40:17[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:40:17[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:40:18[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:40:18[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2329 ms
INFO  23-06-13 10:40:18[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:40:18[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:40:18[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:40:18[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:40:18[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:40:18[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:40:19[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:40:19[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:40:20[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:40:20[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:40:20[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:40:20[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:40:20[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:40:20[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:40:20[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:41:02[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 39232 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:41:02[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 137 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:03[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:41:04[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:41:04[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:41:04[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:41:04[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:41:05[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:41:05[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2545 ms
INFO  23-06-13 10:41:05[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:41:05[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:41:05[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:41:05[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:41:05[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:41:05[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:41:06[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:41:06[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:41:06[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:41:06[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:41:06[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:41:06[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:41:06[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:41:06[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:41:07[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:41:26[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 37464 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:41:26[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 38 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 154 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:41:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 24 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:41:28[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:41:28[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:41:28[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:41:28[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:41:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:41:28[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2454 ms
INFO  23-06-13 10:41:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:41:28[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:41:29[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:41:29[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:41:29[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:41:29[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:41:30[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:41:30[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:41:31[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 10:41:32[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 10:41:33[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 10:41:33[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 10:41:33[main] [AppInfoParser:121] - Kafka startTimeMs: 1686620493040
INFO  23-06-13 10:41:33[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 10:41:33[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:41:33[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 10:41:33[main] [ApiApplication:61] - Started ApiApplication in 8.272 seconds (JVM running for 9.07)
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=205, memberId='consumer-foo-1-bb6bee61-74ed-4982-aba9-589fc626a089', protocol='range'}
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 205: {consumer-foo-1-bb6bee61-74ed-4982-aba9-589fc626a089=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=205, memberId='consumer-foo-1-bb6bee61-74ed-4982-aba9-589fc626a089', protocol='range'}
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:41:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:41:43[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 10:41:43[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 10:41:43[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 10:42:08[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:42:08[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.EventProjector.handle(web.api.eventSourcing.model.Cart)" because "this.eventProjector" is null
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 10:42:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 10:42:08[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:42:08[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:42:08[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:42:10[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 16748 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:42:10[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 107 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:42:12[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:42:12[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:42:12[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:42:12[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:42:13[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:42:13[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2482 ms
INFO  23-06-13 10:42:13[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:42:13[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:42:13[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:42:13[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:42:13[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:42:13[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:42:14[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:42:14[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:42:15[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.CartEventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:42:15[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:42:15[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:42:15[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:42:15[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:42:15[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:42:15[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.CartEventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.CartEventProjector' in your configuration.

INFO  23-06-13 10:42:26[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43428 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:42:26[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 124 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:42:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:42:28[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:42:28[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:42:28[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:42:28[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:42:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:42:29[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2656 ms
INFO  23-06-13 10:42:29[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:42:29[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:42:29[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:42:29[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:42:29[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:42:29[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:42:30[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:42:30[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:42:31[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 10:42:33[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 10:42:33[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 10:42:33[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 10:42:33[main] [AppInfoParser:121] - Kafka startTimeMs: 1686620553685
INFO  23-06-13 10:42:33[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 10:42:33[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:42:33[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 10:42:34[main] [ApiApplication:61] - Started ApiApplication in 8.493 seconds (JVM running for 9.274)
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=207, memberId='consumer-foo-1-a92cfb45-7dea-494b-8f8b-aa844d498429', protocol='range'}
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 207: {consumer-foo-1-a92cfb45-7dea-494b-8f8b-aa844d498429=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=207, memberId='consumer-foo-1-a92cfb45-7dea-494b-8f8b-aa844d498429', protocol='range'}
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:42:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:42:36[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 10:42:36[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 10:42:36[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-13 10:42:38[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 10:43:14[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 10:43:14[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.CartEventProjector.handle(web.api.eventSourcing.model.Cart)" because "this.eventProjector" is null
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=207, memberId='consumer-foo-1-a92cfb45-7dea-494b-8f8b-aa844d498429', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=209, memberId='consumer-foo-1-30a6a19b-01a6-49e6-9f1c-3eeb0bd946c3', protocol='range'}
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 209: {consumer-foo-1-30a6a19b-01a6-49e6-9f1c-3eeb0bd946c3=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=209, memberId='consumer-foo-1-30a6a19b-01a6-49e6-9f1c-3eeb0bd946c3', protocol='range'}
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-30a6a19b-01a6-49e6-9f1c-3eeb0bd946c3 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 10:43:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 10:43:14[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:43:14[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:43:14[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:43:18[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 9844 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:43:18[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 38 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:19[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:43:20[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:43:20[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:43:20[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:43:20[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:43:20[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:43:20[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2490 ms
INFO  23-06-13 10:43:21[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:43:21[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:43:21[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:43:21[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:43:21[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:43:21[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:43:22[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:43:22[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:43:23[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:43:23[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:43:23[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:43:23[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:43:23[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:43:23[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:43:23[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:43:47[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 33572 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:43:47[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 115 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:43:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:43:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:43:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:43:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:43:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:43:50[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:43:50[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2653 ms
INFO  23-06-13 10:43:50[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:43:50[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:43:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:43:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:43:51[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:43:51[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:43:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:43:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:43:52[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:43:52[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:43:52[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:43:52[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:43:52[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:43:52[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:43:52[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:44:53[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 4468 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:44:53[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 110 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:44:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:44:55[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:44:55[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:44:55[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:44:55[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:44:56[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:44:56[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2532 ms
INFO  23-06-13 10:44:56[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:44:56[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:44:56[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:44:57[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:44:57[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:44:57[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:44:58[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:44:58[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:44:58[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:44:58[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:44:58[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:44:58[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:44:58[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:44:58[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:44:58[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:45:25[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 15128 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:45:25[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 121 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:45:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:45:27[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:45:27[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:45:27[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:45:27[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:45:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:45:28[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2527 ms
INFO  23-06-13 10:45:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:45:28[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:45:28[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:45:28[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:45:29[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:45:29[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:45:29[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:45:29[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:45:30[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:45:30[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:45:30[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:45:30[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:45:30[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:45:30[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:45:30[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:46:08[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43028 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:46:08[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:46:10[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:46:10[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:46:10[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:46:10[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:46:11[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:46:11[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2401 ms
INFO  23-06-13 10:46:11[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:46:11[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:46:11[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:46:12[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:46:12[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:46:12[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:46:12[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:46:12[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:46:13[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:46:13[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:46:13[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:46:13[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:46:13[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:46:13[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:46:13[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:46:31[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 38392 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:46:31[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 109 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:32[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:46:33[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:46:33[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:46:33[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:46:33[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:46:34[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:46:34[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2483 ms
INFO  23-06-13 10:46:34[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:46:34[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:46:34[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:46:35[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:46:35[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:46:35[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:46:35[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:46:35[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:46:36[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:46:36[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:46:36[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:46:36[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:46:36[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:46:36[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:46:36[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:46:56[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32692 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:46:56[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:56[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:46:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:46:58[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:46:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:46:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:46:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:46:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:46:58[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2516 ms
INFO  23-06-13 10:46:58[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:46:58[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:46:59[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:46:59[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:46:59[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:46:59[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:46:59[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:46:59[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:47:00[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventStore.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:47:00[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:47:00[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:47:00[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:47:00[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:47:00[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:47:00[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:47:22[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 19196 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:47:22[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 25 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:47:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:47:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:47:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:47:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:47:25[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:47:25[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2597 ms
INFO  23-06-13 10:47:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:47:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:47:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:47:25[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:47:25[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:47:25[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:47:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:47:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:47:27[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:47:27[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:47:27[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:47:27[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:47:27[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:47:27[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:47:27[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:47:56[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 25948 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:47:56[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:47:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:47:58[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:47:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:47:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:47:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:47:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:47:58[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2602 ms
INFO  23-06-13 10:47:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:47:59[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:47:59[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:47:59[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:47:59[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:47:59[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:48:00[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:48:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:48:01[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:48:01[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:48:01[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:48:01[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:48:01[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:48:01[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:48:01[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:48:14[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43024 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:48:14[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 106 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:15[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:48:16[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:48:16[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:48:16[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:48:16[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:48:17[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:48:17[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2446 ms
INFO  23-06-13 10:48:17[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:48:17[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:48:17[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:48:17[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:48:18[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:48:18[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:48:18[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:48:18[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:48:19[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:48:19[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:48:19[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:48:19[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:48:19[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:48:19[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:48:19[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:48:37[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 20696 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:48:37[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 49 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 116 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:38[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:48:39[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:48:39[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:48:39[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:48:39[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:48:40[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:48:40[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2660 ms
INFO  23-06-13 10:48:40[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:48:40[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:48:40[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:48:41[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:48:41[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:48:41[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:48:41[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:48:41[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:48:42[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:48:42[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:48:42[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:48:42[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:48:42[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:48:42[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:48:42[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:48:51[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 21828 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:48:51[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 119 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:48:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:48:53[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:48:53[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:48:53[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:48:53[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:48:54[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:48:54[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2682 ms
INFO  23-06-13 10:48:54[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:48:54[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:48:54[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:48:54[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:48:54[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:48:54[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:48:55[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:48:55[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:48:56[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:48:56[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:48:56[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:48:56[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:48:56[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:48:56[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:48:56[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:49:12[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 34824 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:49:12[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 53 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 128 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:13[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:49:15[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:49:15[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:49:15[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:49:15[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:49:15[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:49:15[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2716 ms
INFO  23-06-13 10:49:15[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:49:16[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:49:16[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:49:16[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:49:16[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:49:16[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:49:17[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:49:17[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:49:17[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.CartEventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:49:17[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:49:17[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:49:17[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:49:17[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:49:17[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:49:17[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.CartEventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.CartEventProjector' in your configuration.

INFO  23-06-13 10:49:47[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 3048 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:49:47[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 115 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:49:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:49:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:49:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:49:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:49:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:49:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:49:49[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2497 ms
INFO  23-06-13 10:49:50[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:49:50[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:49:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:49:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:49:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:49:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:49:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:49:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:49:51[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:49:51[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:49:51[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:49:51[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:49:51[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:49:51[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:49:51[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:50:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 27424 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:50:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 108 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:50:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:50:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:50:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:50:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:50:30[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:50:30[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2465 ms
INFO  23-06-13 10:50:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:50:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:50:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:50:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:50:31[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:50:31[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:50:31[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:50:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:50:32[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.eventSourcing.event.EventProjector' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:50:32[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:50:32[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:50:32[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:50:32[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:50:32[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:50:32[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field eventProjector in web.api.eventSourcing.event.CartEventStore required a bean of type 'web.api.eventSourcing.event.EventProjector' that could not be found.


Action:

Consider defining a bean of type 'web.api.eventSourcing.event.EventProjector' in your configuration.

INFO  23-06-13 10:50:42[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 33864 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:50:42[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:50:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 125 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:50:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:50:44[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:50:44[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:50:44[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:50:44[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:50:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:50:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2580 ms
INFO  23-06-13 10:50:45[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:50:45[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:50:45[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:50:45[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:50:45[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:50:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:50:46[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:50:46[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:50:46[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:50:46[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:50:46[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:50:46[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:50:46[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:50:46[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:50:46[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:51:20[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 41224 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:51:20[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:51:22[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:51:22[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:51:22[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:51:22[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:51:22[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:51:22[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2634 ms
INFO  23-06-13 10:51:23[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:51:23[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:51:23[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:51:23[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:51:23[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:51:23[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:51:24[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:51:24[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:51:25[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:51:25[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:51:25[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:51:25[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:51:25[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:51:25[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:51:25[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:51:41[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42468 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:51:41[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 125 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:51:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:51:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:51:44[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:51:44[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:51:44[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:51:44[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:51:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:51:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2508 ms
INFO  23-06-13 10:51:44[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:51:44[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:51:44[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:51:45[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:51:45[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:51:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:51:45[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:51:45[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:51:46[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartItemRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:51:46[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:51:46[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:51:46[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:51:46[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:51:46[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:51:46[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartItemRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartItemRepository' in your configuration.

INFO  23-06-13 10:52:05[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32736 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:52:05[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:06[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 26 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:52:07[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:52:07[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:52:07[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:52:07[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:52:08[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:52:08[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2501 ms
INFO  23-06-13 10:52:08[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:52:08[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:52:08[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:52:08[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:52:09[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:52:09[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:52:09[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:52:09[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:52:10[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector': Unsatisfied dependency expressed through field 'cartRepository'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:52:10[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:52:10[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:52:10[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:52:10[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:52:10[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:52:10[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cartRepository in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:52:40[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42992 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:52:40[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:52:41[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 28 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:52:42[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:52:42[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:52:42[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:52:42[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:52:42[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:52:42[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2464 ms
INFO  23-06-13 10:52:43[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:52:43[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:52:43[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:52:43[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:52:43[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:52:43[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:52:44[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:52:44[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:52:44[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:52:44[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:52:44[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:52:44[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:52:44[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:52:45[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:52:45[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:53:01[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 29096 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:53:01[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:53:03[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:53:03[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:53:03[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:53:03[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:53:03[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:53:03[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2674 ms
INFO  23-06-13 10:53:04[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:53:04[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:53:04[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:53:04[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:53:04[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:53:04[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:53:05[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:53:05[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:53:06[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:53:06[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:53:06[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:53:06[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:53:06[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:53:06[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:53:06[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:53:45[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 27452 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:53:45[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:53:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 14 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:53:47[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:53:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:53:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:53:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:53:48[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:53:48[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2424 ms
INFO  23-06-13 10:53:48[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:53:48[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:53:48[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:53:48[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:53:48[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:53:48[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:53:49[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:53:49[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:53:50[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:53:50[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:53:50[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:53:50[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:53:50[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:53:50[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:53:50[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:54:33[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 24524 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:54:33[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:54:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 150 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:54:35[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:54:35[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:54:35[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:54:35[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:54:35[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:54:36[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:54:36[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2466 ms
INFO  23-06-13 10:54:36[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:54:36[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:54:37[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:54:37[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:54:37[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:54:37[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:54:37[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:54:37[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:54:38[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:54:38[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:54:38[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:54:38[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:54:38[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:54:38[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:54:38[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:55:39[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 4888 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:55:39[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 109 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:55:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:55:41[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:55:41[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:55:41[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:55:41[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:55:41[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:55:41[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2434 ms
INFO  23-06-13 10:55:42[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:55:42[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:55:42[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:55:42[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:55:42[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:55:42[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:55:43[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:55:43[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:55:43[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventProjector.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
INFO  23-06-13 10:55:43[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:55:43[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:55:43[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:55:43[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:55:43[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:55:43[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:56:38[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 24392 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:56:38[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 148 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:56:39[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:56:40[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:56:40[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:56:40[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:56:40[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:56:41[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:56:41[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2508 ms
INFO  23-06-13 10:56:41[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:56:41[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:56:41[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:56:42[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:56:42[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:56:42[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:56:42[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:56:42[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:56:43[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector': Unsatisfied dependency expressed through field 'cartRepository'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:56:43[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:56:43[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:56:43[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:56:43[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:56:43[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:56:43[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cartRepository in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:57:26[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 37276 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:57:26[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:27[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:57:28[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:57:28[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:57:28[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:57:28[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:57:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:57:29[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2424 ms
INFO  23-06-13 10:57:29[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:57:29[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:57:29[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:57:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:57:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:57:30[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:57:30[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:57:30[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:57:31[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector': Unsatisfied dependency expressed through field 'cartRepository'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:57:31[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:57:31[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:57:31[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:57:31[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:57:31[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:57:31[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cartRepository in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 10:57:48[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 8304 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 10:57:48[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 108 ms. Found 3 JPA repository interfaces.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 10:57:49[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 10:57:50[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 10:57:50[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 10:57:50[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 10:57:50[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 10:57:51[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 10:57:51[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2596 ms
INFO  23-06-13 10:57:51[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 10:57:51[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 10:57:51[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 10:57:51[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 10:57:51[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 10:57:51[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 10:57:52[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 10:57:52[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 10:57:53[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler': Unsatisfied dependency expressed through field 'eventStore'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventStore': Unsatisfied dependency expressed through field 'eventProjector'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventProjector': Unsatisfied dependency expressed through field 'cartRepository'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'web.api.repository.CartRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
INFO  23-06-13 10:57:53[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 10:57:53[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 10:57:53[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 10:57:53[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 10:57:53[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 10:57:53[main] [LoggingFailureAnalysisReporter:40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field cartRepository in web.api.eventSourcing.event.CartEventProjector required a bean of type 'web.api.repository.CartRepository' that could not be found.


Action:

Consider defining a bean of type 'web.api.repository.CartRepository' in your configuration.

INFO  23-06-13 11:00:59[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 39648 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:00:59[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 127 ms. Found 4 JPA repository interfaces.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:01:01[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:01:01[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:01:01[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:01:01[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:01:02[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:01:02[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2760 ms
INFO  23-06-13 11:01:02[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:01:02[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:01:02[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:01:02[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:01:02[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:01:02[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:01:03[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: No identifier specified for entity: web.api.eventSourcing.model.Cart
WARN  23-06-13 11:01:03[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.Cart
INFO  23-06-13 11:01:03[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:01:03[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:01:03[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:01:03[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:01:03[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.Cart
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.Cart
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:772)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:225)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:239)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:282)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
INFO  23-06-13 11:01:20[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 3228 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:01:20[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 110 ms. Found 4 JPA repository interfaces.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:01:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:01:22[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:01:22[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:01:22[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:01:22[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:01:22[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:01:22[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2525 ms
INFO  23-06-13 11:01:22[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:01:23[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:01:23[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:01:23[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:01:23[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:01:23[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:01:23[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: cart, for columns: [org.hibernate.mapping.Column(cart_items)]
WARN  23-06-13 11:01:23[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: cart, for columns: [org.hibernate.mapping.Column(cart_items)]
INFO  23-06-13 11:01:23[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:01:23[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:01:23[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:01:23[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:01:23[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: cart, for columns: [org.hibernate.mapping.Column(cart_items)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: cart, for columns: [org.hibernate.mapping.Column(cart_items)]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.MappingException: Could not determine type for: java.util.Set, at table: cart, for columns: [org.hibernate.mapping.Column(cart_items)]
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:515)
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:482)
	at org.hibernate.mapping.Property.isValid(Property.java:231)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:627)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:267)
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:359)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:02:57[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32108 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:02:57[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:02:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 15 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:02:59[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:02:59[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:02:59[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:02:59[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:03:00[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:03:00[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2387 ms
INFO  23-06-13 11:03:00[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:03:00[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:03:00[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:03:00[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:03:01[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:03:01[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:03:01[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: No identifier specified for entity: web.api.eventSourcing.model.CartItem
WARN  23-06-13 11:03:01[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.CartItem
INFO  23-06-13 11:03:01[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:03:01[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:03:01[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:03:01[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:03:01[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.CartItem
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.hibernate.AnnotationException: No identifier specified for entity: web.api.eventSourcing.model.CartItem
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:266)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:772)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:225)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:239)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:282)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
INFO  23-06-13 11:03:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32792 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:03:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 103 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:03:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:03:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:03:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:03:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:03:30[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:03:30[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2466 ms
INFO  23-06-13 11:03:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:03:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:03:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:03:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:03:31[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:03:31[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:03:31[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
WARN  23-06-13 11:03:31[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
INFO  23-06-13 11:03:31[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:03:31[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:03:31[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:03:31[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:03:31[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:515)
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:482)
	at org.hibernate.mapping.Property.isValid(Property.java:231)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:627)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:267)
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:359)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:03:52[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 8892 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:03:52[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:03:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 28 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:03:54[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:03:54[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:03:54[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:03:54[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:03:55[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:03:55[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2590 ms
INFO  23-06-13 11:03:55[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:03:55[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:03:55[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:03:55[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:03:55[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:03:55[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:03:56[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
WARN  23-06-13 11:03:56[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
INFO  23-06-13 11:03:56[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:03:56[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:03:56[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:03:56[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:03:56[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.MappingException: Could not determine type for: web.api.eventSourcing.model.Product, at table: cart_item, for columns: [org.hibernate.mapping.Column(product)]
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:515)
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:482)
	at org.hibernate.mapping.Property.isValid(Property.java:231)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:627)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:267)
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:359)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:04:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 23876 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:04:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 125 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:04:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:04:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:04:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:04:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:04:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:04:29[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2725 ms
INFO  23-06-13 11:04:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:04:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:04:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:04:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:04:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:04:30[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
ERROR 23-06-13 11:04:30[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.domain.Member, at table: cart, for columns: [org.hibernate.mapping.Column(member)]
WARN  23-06-13 11:04:30[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.domain.Member, at table: cart, for columns: [org.hibernate.mapping.Column(member)]
INFO  23-06-13 11:04:30[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:04:30[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:04:30[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:04:30[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:04:30[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.domain.Member, at table: cart, for columns: [org.hibernate.mapping.Column(member)]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not determine type for: web.api.domain.Member, at table: cart, for columns: [org.hibernate.mapping.Column(member)]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.MappingException: Could not determine type for: web.api.domain.Member, at table: cart, for columns: [org.hibernate.mapping.Column(member)]
	at org.hibernate.mapping.SimpleValue.getType(SimpleValue.java:515)
	at org.hibernate.mapping.SimpleValue.isValid(SimpleValue.java:482)
	at org.hibernate.mapping.Property.isValid(Property.java:231)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:627)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:267)
	at org.hibernate.boot.internal.MetadataImpl.validate(MetadataImpl.java:359)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:04:54[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 21060 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:04:54[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:04:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:04:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 140 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:04:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 15 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:04:56[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:04:56[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:04:56[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:04:56[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:04:56[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:04:56[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2655 ms
INFO  23-06-13 11:04:57[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:04:57[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:04:57[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:04:57[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:04:57[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:04:57[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:04:58[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
WARN  23-06-13 11:04:58[main] [SqlExceptionHelper:230] - SQL Warning Code: 0, SQLState: 00000
WARN  23-06-13 11:04:58[main] [SqlExceptionHelper:231] - constraint "uk_f3kfhfstmw5i8hgydsq0ddwpp" of relation "cart_cart_items" does not exist, skipping
INFO  23-06-13 11:04:58[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 11:04:58[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 11:04:59[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 11:05:01[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 11:05:01[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 11:05:01[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 11:05:01[main] [AppInfoParser:121] - Kafka startTimeMs: 1686621901421
INFO  23-06-13 11:05:01[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 11:05:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:05:01[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 11:05:02[main] [ApiApplication:61] - Started ApiApplication in 8.559 seconds (JVM running for 9.345)
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=211, memberId='consumer-foo-1-b1c28da6-80bf-4301-88ea-0acd50edfe15', protocol='range'}
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 211: {consumer-foo-1-b1c28da6-80bf-4301-88ea-0acd50edfe15=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=211, memberId='consumer-foo-1-b1c28da6-80bf-4301-88ea-0acd50edfe15', protocol='range'}
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:05:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 11:06:58[http-nio-8090-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 11:06:58[http-nio-8090-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 11:06:58[http-nio-8090-exec-2] [DispatcherServlet:547] - Completed initialization in 0 ms
INFO  23-06-13 11:07:00[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 11:07:18[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=211, memberId='consumer-foo-1-b1c28da6-80bf-4301-88ea-0acd50edfe15', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=213, memberId='consumer-foo-1-51caecd3-8ab4-4a04-ad77-e573479d11a4', protocol='range'}
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 213: {consumer-foo-1-51caecd3-8ab4-4a04-ad77-e573479d11a4=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=213, memberId='consumer-foo-1-51caecd3-8ab4-4a04-ad77-e573479d11a4', protocol='range'}
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:07:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 11:07:23[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
WARN  23-06-13 11:07:30[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 11:07:30[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 11:07:30[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 11:07:30[http-nio-8090-exec-3] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$cc07e8aa.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
INFO  23-06-13 11:08:57[http-nio-8090-exec-6] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 11:09:12[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=213, memberId='consumer-foo-1-51caecd3-8ab4-4a04-ad77-e573479d11a4', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
WARN  23-06-13 11:09:16[http-nio-8090-exec-7] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 11:09:16[http-nio-8090-exec-7] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 11:09:16[http-nio-8090-exec-7] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
WARN  23-06-13 11:09:16[http-nio-8090-exec-7] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$cc07e8aa.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=215, memberId='consumer-foo-1-3cfa4400-f7eb-4775-a23d-27b3814a3d61', protocol='range'}
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 215: {consumer-foo-1-3cfa4400-f7eb-4775-a23d-27b3814a3d61=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=215, memberId='consumer-foo-1-3cfa4400-f7eb-4775-a23d-27b3814a3d61', protocol='range'}
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:09:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-13 11:11:04[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m6s745ms521µs100ns).
INFO  23-06-13 11:11:05[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 11:11:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:481] - [Consumer clientId=consumer-foo-1, groupId=foo] Error sending fetch request (sessionId=636614940, epoch=439) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
INFO  23-06-13 11:11:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:11:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:11:06[http-nio-8090-exec-8] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=215, memberId='consumer-foo-1-3cfa4400-f7eb-4775-a23d-27b3814a3d61', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=217, memberId='consumer-foo-1-38c75367-dc2a-4491-8c49-53d5e10975ad', protocol='range'}
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 217: {consumer-foo-1-38c75367-dc2a-4491-8c49-53d5e10975ad=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=217, memberId='consumer-foo-1-38c75367-dc2a-4491-8c49-53d5e10975ad', protocol='range'}
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:11:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-13 11:11:13[http-nio-8090-exec-9] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 11:11:13[http-nio-8090-exec-9] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 11:11:13[http-nio-8090-exec-9] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 11:11:13[http-nio-8090-exec-9] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$cc07e8aa.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-38c75367-dc2a-4491-8c49-53d5e10975ad sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 11:11:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 11:11:21[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 11:11:21[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:11:21[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:11:22[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42888 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:11:22[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:11:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:11:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:11:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:11:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:11:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:11:25[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:11:25[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2530 ms
INFO  23-06-13 11:11:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:11:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:11:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:11:25[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:11:25[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:11:26[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:11:26[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
INFO  23-06-13 11:11:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 11:11:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 11:11:27[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 11:11:29[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 11:11:29[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 11:11:29[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 11:11:29[main] [AppInfoParser:121] - Kafka startTimeMs: 1686622289082
INFO  23-06-13 11:11:29[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 11:11:29[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:11:29[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 11:11:29[main] [ApiApplication:61] - Started ApiApplication in 7.594 seconds (JVM running for 8.443)
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=219, memberId='consumer-foo-1-1bf89c21-6746-4bf5-9021-5450f7511228', protocol='range'}
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 219: {consumer-foo-1-1bf89c21-6746-4bf5-9021-5450f7511228=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=219, memberId='consumer-foo-1-1bf89c21-6746-4bf5-9021-5450f7511228', protocol='range'}
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:11:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 11:11:32[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 11:11:32[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 11:11:32[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 11:11:34[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
WARN  23-06-13 11:11:40[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 11:11:40[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 11:11:40[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 11:11:40[http-nio-8090-exec-3] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$3d91bb35.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
WARN  23-06-13 11:12:48[http-nio-8090-exec-5] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 11:12:48[http-nio-8090-exec-5] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 11:12:48[http-nio-8090-exec-5] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 11:12:48[http-nio-8090-exec-5] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$3d91bb35.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-1bf89c21-6746-4bf5-9021-5450f7511228 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 11:15:01[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 11:15:01[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 11:15:01[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:15:01[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:15:03[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 5012 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:15:03[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:15:03[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:03[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:15:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:03[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 115 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:15:05[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:15:05[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:15:05[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:15:05[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:15:05[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:15:05[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2499 ms
INFO  23-06-13 11:15:05[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:15:06[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:15:06[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:15:06[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:15:06[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:15:06[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:15:06[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
ERROR 23-06-13 11:15:07[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
WARN  23-06-13 11:15:07[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
INFO  23-06-13 11:15:07[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:15:07[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:15:07[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:15:07[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:15:07[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.checkExportIdentifier(AbstractSchemaMigrator.java:509)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:15:42[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 44840 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:15:42[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 101 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:15:43[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 16 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:15:44[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:15:44[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:15:44[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:15:44[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:15:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:15:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2340 ms
INFO  23-06-13 11:15:45[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:15:45[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:15:45[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:15:45[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:15:45[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:15:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:15:45[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
ERROR 23-06-13 11:15:46[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
WARN  23-06-13 11:15:46[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
INFO  23-06-13 11:15:46[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:15:46[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:15:46[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:15:46[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:15:46[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.checkExportIdentifier(AbstractSchemaMigrator.java:509)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:16:13[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 37168 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:16:13[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:16:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:16:15[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:16:15[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:16:15[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:16:15[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:16:15[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:16:15[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2499 ms
INFO  23-06-13 11:16:16[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:16:16[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:16:16[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:16:16[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:16:16[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:16:16[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:16:16[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
ERROR 23-06-13 11:16:17[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
WARN  23-06-13 11:16:17[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
INFO  23-06-13 11:16:17[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:16:17[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:16:17[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:16:17[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:16:17[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.checkExportIdentifier(AbstractSchemaMigrator.java:509)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:17:41[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 38336 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:17:41[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 127 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:17:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:17:43[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:17:43[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:17:43[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:17:43[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:17:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:17:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2727 ms
INFO  23-06-13 11:17:44[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:17:44[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:17:44[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:17:45[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:17:45[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:17:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:17:45[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
ERROR 23-06-13 11:17:45[main] [LocalContainerEntityManagerFactoryBean:426] - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
WARN  23-06-13 11:17:45[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
INFO  23-06-13 11:17:45[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 11:17:45[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 11:17:45[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-13 11:17:45[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-13 11:17:45[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Export identifier [cart_item] encountered more than once
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.checkExportIdentifier(AbstractSchemaMigrator.java:509)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:71)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:220)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:123)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
INFO  23-06-13 11:18:25[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 26736 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 11:18:25[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 127 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 11:18:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 11:18:27[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 11:18:27[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:18:27[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 11:18:27[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 11:18:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 11:18:28[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2819 ms
INFO  23-06-13 11:18:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 11:18:28[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 11:18:29[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 11:18:29[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 11:18:29[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 11:18:29[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 11:18:29[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
INFO  23-06-13 11:18:30[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 11:18:30[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 11:18:31[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 11:18:32[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 11:18:32[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 11:18:32[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 11:18:32[main] [AppInfoParser:121] - Kafka startTimeMs: 1686622712840
INFO  23-06-13 11:18:32[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 11:18:32[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 11:18:32[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 11:18:33[main] [ApiApplication:61] - Started ApiApplication in 8.343 seconds (JVM running for 9.129)
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=221, memberId='consumer-foo-1-70b28bba-f877-4479-be07-2679682a287b', protocol='range'}
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 221: {consumer-foo-1-70b28bba-f877-4479-be07-2679682a287b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=221, memberId='consumer-foo-1-70b28bba-f877-4479-be07-2679682a287b', protocol='range'}
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 11:18:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:02:56[http-nio-8090-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:02:56[http-nio-8090-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:02:56[http-nio-8090-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 13:02:57[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
WARN  23-06-13 13:04:05[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m4s569ms977µs200ns).
INFO  23-06-13 13:04:05[kafka-coordinator-heartbeat-thread | foo] [FetchSessionHandler:481] - [Consumer clientId=consumer-foo-1, groupId=foo] Error sending fetch request (sessionId=853726890, epoch=12421) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
INFO  23-06-13 13:04:05[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-13 13:04:05[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23503
ERROR 23-06-13 13:04:05[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
INFO  23-06-13 13:04:05[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 13:04:05[http-nio-8090-exec-3] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$cc8e68bd.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [fktfil3niee3t34ndph591ig2h8]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy138.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1352)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "cart_cart_items" violates foreign key constraint "fktfil3niee3t34ndph591ig2h8"
  Detail: Key (cart_items_seq)=(0) is not present in table "cart_item".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 104 common frames omitted
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=221, memberId='consumer-foo-1-70b28bba-f877-4479-be07-2679682a287b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=223, memberId='consumer-foo-1-769652ba-f0bc-4c7b-af94-8f5eadd66019', protocol='range'}
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 223: {consumer-foo-1-769652ba-f0bc-4c7b-af94-8f5eadd66019=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=223, memberId='consumer-foo-1-769652ba-f0bc-4c7b-af94-8f5eadd66019', protocol='range'}
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-769652ba-f0bc-4c7b-af94-8f5eadd66019 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:04:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:04:05[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:04:05[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:04:05[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:04:07[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42076 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:04:07[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:04:08[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:04:09[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:04:09[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:04:09[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:04:09[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:04:10[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:04:10[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2516 ms
INFO  23-06-13 13:04:10[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:04:10[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:04:10[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:04:10[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:04:10[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:04:10[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:04:11[main] [PojoInstantiator:47] - HHH000182: No default (no-argument) constructor for class: web.api.eventSourcing.model.CartItem (class must be instantiated by Interceptor)
INFO  23-06-13 13:04:11[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:04:11[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:04:12[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:04:14[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:04:14[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:04:14[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:04:14[main] [AppInfoParser:121] - Kafka startTimeMs: 1686629054782
INFO  23-06-13 13:04:14[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:04:14[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:04:14[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:04:15[main] [ApiApplication:61] - Started ApiApplication in 8.436 seconds (JVM running for 9.3)
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=225, memberId='consumer-foo-1-487f9e72-d544-4c03-8450-72cd27b6901e', protocol='range'}
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 225: {consumer-foo-1-487f9e72-d544-4c03-8450-72cd27b6901e=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=225, memberId='consumer-foo-1-487f9e72-d544-4c03-8450-72cd27b6901e', protocol='range'}
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:04:15[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:04:19[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:04:19[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:04:19[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 13:04:24[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
WARN  23-06-13 13:04:39[http-nio-8090-exec-2] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$2a0e7c10.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.orm.jpa.JpaSystemException: No default constructor for entity:  : web.api.eventSourcing.model.CartItem; nested exception is org.hibernate.InstantiationException: No default constructor for entity:  : web.api.eventSourcing.model.CartItem
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:331)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:23)
	... 69 common frames omitted
Caused by: org.hibernate.InstantiationException: No default constructor for entity:  : web.api.eventSourcing.model.CartItem
	at org.hibernate.tuple.PojoInstantiator.instantiate(PojoInstantiator.java:85)
	at org.hibernate.tuple.PojoInstantiator.instantiate(PojoInstantiator.java:105)
	at org.hibernate.tuple.entity.AbstractEntityTuplizer.instantiate(AbstractEntityTuplizer.java:718)
	at org.hibernate.persister.entity.AbstractEntityPersister.instantiate(AbstractEntityPersister.java:5324)
	at org.hibernate.internal.SessionImpl.instantiate(SessionImpl.java:1643)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:234)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:320)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:175)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:829)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:816)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:669)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 77 common frames omitted
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-487f9e72-d544-4c03-8450-72cd27b6901e sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:06:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:06:45[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:06:45[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:06:45[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:06:46[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 44496 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:06:46[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:06:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:06:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:06:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:06:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:06:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:06:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:06:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:06:49[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2667 ms
INFO  23-06-13 13:06:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:06:49[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:06:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:06:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:06:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:06:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:06:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:06:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:06:52[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:06:53[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:06:53[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:06:53[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:06:53[main] [AppInfoParser:121] - Kafka startTimeMs: 1686629213374
INFO  23-06-13 13:06:53[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:06:53[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:06:53[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:06:53[main] [ApiApplication:61] - Started ApiApplication in 7.458 seconds (JVM running for 8.489)
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=227, memberId='consumer-foo-1-7ad26bd3-63fe-41da-94c1-4177deecc257', protocol='range'}
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 227: {consumer-foo-1-7ad26bd3-63fe-41da-94c1-4177deecc257=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=227, memberId='consumer-foo-1-7ad26bd3-63fe-41da-94c1-4177deecc257', protocol='range'}
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:06:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:07:20[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:07:20[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:07:20[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-13 13:07:24[http-nio-8090-exec-1] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:07:24[http-nio-8090-exec-1] [SqlExceptionHelper:142] - ERROR: null value in column "cart_items_seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (8, 2, 1, null).
INFO  23-06-13 13:07:24[http-nio-8090-exec-1] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 13:07:24[http-nio-8090-exec-1] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$3d91bb35.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [cart_items_seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:23)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "cart_items_seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (8, 2, 1, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 105 common frames omitted
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-7ad26bd3-63fe-41da-94c1-4177deecc257 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:07:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:07:43[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:07:43[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:07:43[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:07:45[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32676 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:07:45[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:07:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:07:47[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:07:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:07:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:07:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:07:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:07:47[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2496 ms
INFO  23-06-13 13:07:48[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:07:48[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:07:48[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:07:48[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:07:48[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:07:48[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:07:49[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:07:49[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:07:50[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:07:52[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:07:52[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:07:52[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:07:52[main] [AppInfoParser:121] - Kafka startTimeMs: 1686629272621
INFO  23-06-13 13:07:52[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:07:52[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:07:52[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:07:53[main] [ApiApplication:61] - Started ApiApplication in 8.496 seconds (JVM running for 9.315)
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=229, memberId='consumer-foo-1-92bdd040-0d37-48ee-8103-eb21078a0a20', protocol='range'}
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 229: {consumer-foo-1-92bdd040-0d37-48ee-8103-eb21078a0a20=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=229, memberId='consumer-foo-1-92bdd040-0d37-48ee-8103-eb21078a0a20', protocol='range'}
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:07:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-92bdd040-0d37-48ee-8103-eb21078a0a20 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:10:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:10:23[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:10:23[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:10:23[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:10:25[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 5400 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:10:25[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 45 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:10:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:10:27[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:10:27[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:10:27[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:10:27[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:10:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:10:28[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2629 ms
INFO  23-06-13 13:10:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:10:28[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:10:28[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:10:28[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:10:28[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:10:28[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:10:29[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:10:29[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:10:30[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:10:32[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:10:32[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:10:32[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:10:32[main] [AppInfoParser:121] - Kafka startTimeMs: 1686629432915
INFO  23-06-13 13:10:32[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:10:32[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:10:32[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:10:33[main] [ApiApplication:61] - Started ApiApplication in 9.041 seconds (JVM running for 9.875)
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=231, memberId='consumer-foo-1-a0c7b20b-958b-4a10-845a-a79cec4acda9', protocol='range'}
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 231: {consumer-foo-1-a0c7b20b-958b-4a10-845a-a79cec4acda9=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=231, memberId='consumer-foo-1-a0c7b20b-958b-4a10-845a-a79cec4acda9', protocol='range'}
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:10:34[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:11:29[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:11:29[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:11:29[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
WARN  23-06-13 13:11:32[http-nio-8090-exec-1] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$2a0e7c10.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy139.findByMemberId(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:20)
	... 69 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1672)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:198)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:90)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:156)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:144)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:160)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 77 common frames omitted
WARN  23-06-13 13:12:01[http-nio-8090-exec-2] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:12:01[http-nio-8090-exec-2] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null).
WARN  23-06-13 13:12:01[http-nio-8090-exec-2] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$2a0e7c10.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:25)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3914)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:329)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:286)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:192)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:122)
	at org.hibernate.event.internal.DefaultMergeEventListener.saveTransientEntity(DefaultMergeEventListener.java:273)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:246)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:320)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:175)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:829)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:816)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:669)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 77 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 130 common frames omitted
WARN  23-06-13 13:22:45[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m46s527ms820µs).
INFO  23-06-13 13:22:45[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
WARN  23-06-13 13:22:45[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:22:45[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null).
INFO  23-06-13 13:22:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:22:45[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-13 13:22:45[http-nio-8090-exec-3] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$2a0e7c10.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:25)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:58)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3279)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3914)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:329)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:286)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:192)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:122)
	at org.hibernate.event.internal.DefaultMergeEventListener.saveTransientEntity(DefaultMergeEventListener.java:273)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsTransient(DefaultMergeEventListener.java:246)
	at org.hibernate.event.internal.DefaultMergeEventListener.entityIsDetached(DefaultMergeEventListener.java:320)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:175)
	at org.hibernate.event.internal.DefaultMergeEventListener.onMerge(DefaultMergeEventListener.java:74)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.fireMerge(SessionImpl.java:829)
	at org.hibernate.internal.SessionImpl.merge(SessionImpl.java:816)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.merge(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:669)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 77 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 130 common frames omitted
WARN  23-06-13 13:24:02[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m16s739ms859µs300ns).
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:24:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:24:02[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:24:02[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:24:02[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:24:04[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 38736 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:24:04[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 132 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:24:05[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 21 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:24:06[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:24:06[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:24:06[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:24:06[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:24:07[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:24:07[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2621 ms
INFO  23-06-13 13:24:07[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:24:07[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:24:07[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:24:07[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:24:07[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:24:08[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:24:08[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:24:08[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:24:09[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:24:11[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:24:11[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:24:11[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:24:11[main] [AppInfoParser:121] - Kafka startTimeMs: 1686630251634
INFO  23-06-13 13:24:11[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:24:11[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:24:11[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:24:12[main] [ApiApplication:61] - Started ApiApplication in 8.167 seconds (JVM running for 9.152)
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=233, memberId='consumer-foo-1-85b13f02-2cad-420b-b51a-a0e35f053b9d', protocol='range'}
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 233: {consumer-foo-1-85b13f02-2cad-420b-b51a-a0e35f053b9d=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=233, memberId='consumer-foo-1-85b13f02-2cad-420b-b51a-a0e35f053b9d', protocol='range'}
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:24:12[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-85b13f02-2cad-420b-b51a-a0e35f053b9d sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:29:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:29:08[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:29:08[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:29:08[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:29:10[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 29308 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:29:10[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 107 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:29:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:29:12[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:29:12[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:29:12[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:29:12[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:29:12[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:29:12[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2486 ms
INFO  23-06-13 13:29:13[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:29:13[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:29:13[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:29:13[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:29:13[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:29:13[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:29:14[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:29:14[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:29:15[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:29:17[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:29:17[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:29:17[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:29:17[main] [AppInfoParser:121] - Kafka startTimeMs: 1686630557292
INFO  23-06-13 13:29:17[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:29:17[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:29:17[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:29:18[main] [ApiApplication:61] - Started ApiApplication in 8.009 seconds (JVM running for 8.807)
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=235, memberId='consumer-foo-1-bad6a12d-5862-45e3-ad00-9dde25c2eadb', protocol='range'}
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 235: {consumer-foo-1-bad6a12d-5862-45e3-ad00-9dde25c2eadb=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=235, memberId='consumer-foo-1-bad6a12d-5862-45e3-ad00-9dde25c2eadb', protocol='range'}
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:29:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:30:03[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:30:03[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:30:03[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-13 13:30:20[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-13 13:30:20[http-nio-8090-exec-1] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:30:20[http-nio-8090-exec-1] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
INFO  23-06-13 13:30:20[http-nio-8090-exec-1] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 13:30:20[http-nio-8090-exec-1] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$f45dd10c.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:27)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 105 common frames omitted
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=235, memberId='consumer-foo-1-bad6a12d-5862-45e3-ad00-9dde25c2eadb', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=237, memberId='consumer-foo-1-20e16f1a-b244-4cb4-9d77-35f3d0c79b4a', protocol='range'}
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 237: {consumer-foo-1-20e16f1a-b244-4cb4-9d77-35f3d0c79b4a=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=237, memberId='consumer-foo-1-20e16f1a-b244-4cb4-9d77-35f3d0c79b4a', protocol='range'}
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:30:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-13 13:31:30[http-nio-8090-exec-4] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:31:30[http-nio-8090-exec-4] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
INFO  23-06-13 13:31:30[http-nio-8090-exec-4] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 13:31:30[http-nio-8090-exec-4] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$f45dd10c.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:27)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 105 common frames omitted
INFO  23-06-13 13:32:20[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-13 13:32:20[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59s811ms667µs400ns).
INFO  23-06-13 13:32:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:32:20[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-13 13:32:20[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-13 13:32:20[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
INFO  23-06-13 13:32:20[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
WARN  23-06-13 13:32:20[http-nio-8090-exec-3] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$f45dd10c.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [seq" of relation "cart_item]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy140.save(Unknown Source)
	at web.api.eventSourcing.event.CartEventProjector.execute(Unknown Source)
	... 69 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:109)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 84 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "seq" of relation "cart_item" violates not-null constraint
  Detail: Failing row contains (null, 2, 1, null, 0).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2675)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2365)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:355)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:490)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:408)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:167)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:135)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 105 common frames omitted
INFO  23-06-13 13:32:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=237, memberId='consumer-foo-1-20e16f1a-b244-4cb4-9d77-35f3d0c79b4a', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=239, memberId='consumer-foo-1-d35cdd7d-3e82-4b83-b6c6-09fe5329cda3', protocol='range'}
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 239: {consumer-foo-1-d35cdd7d-3e82-4b83-b6c6-09fe5329cda3=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=239, memberId='consumer-foo-1-d35cdd7d-3e82-4b83-b6c6-09fe5329cda3', protocol='range'}
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:32:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-d35cdd7d-3e82-4b83-b6c6-09fe5329cda3 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:32:46[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:32:46[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:32:46[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:32:46[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:32:47[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 16416 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:32:47[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 41 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 109 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:32:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 16 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:32:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:32:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:32:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:32:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:32:50[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:32:50[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2416 ms
INFO  23-06-13 13:32:50[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:32:50[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:32:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:32:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:32:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:32:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-13 13:32:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:32:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:32:52[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:32:54[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:32:54[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:32:54[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:32:54[main] [AppInfoParser:121] - Kafka startTimeMs: 1686630774389
INFO  23-06-13 13:32:54[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:32:54[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:32:54[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:32:55[main] [ApiApplication:61] - Started ApiApplication in 7.991 seconds (JVM running for 8.796)
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=241, memberId='consumer-foo-1-8049792d-2352-47d8-b477-ad2c934e50cf', protocol='range'}
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 241: {consumer-foo-1-8049792d-2352-47d8-b477-ad2c934e50cf=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=241, memberId='consumer-foo-1-8049792d-2352-47d8-b477-ad2c934e50cf', protocol='range'}
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:32:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-8049792d-2352-47d8-b477-ad2c934e50cf sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-13 13:33:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-13 13:33:21[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-13 13:33:21[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-13 13:33:21[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-13 13:33:22[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 2492 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-13 13:33:22[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 5 JPA repository interfaces.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.CartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-13 13:33:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-13 13:33:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-13 13:33:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:33:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-13 13:33:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-13 13:33:25[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-13 13:33:25[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2428 ms
INFO  23-06-13 13:33:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-13 13:33:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-13 13:33:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-13 13:33:25[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-13 13:33:26[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-13 13:33:26[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
WARN  23-06-13 13:33:26[main] [SqlExceptionHelper:230] - SQL Warning Code: 0, SQLState: 00000
WARN  23-06-13 13:33:26[main] [SqlExceptionHelper:231] - drop cascades to constraint fkfluc3squuq7u8vhwcdfb8mpqe on table cart_cart_items
WARN  23-06-13 13:33:26[main] [SqlExceptionHelper:230] - SQL Warning Code: 0, SQLState: 00000
WARN  23-06-13 13:33:26[main] [SqlExceptionHelper:231] - drop cascades to constraint fktfil3niee3t34ndph591ig2h8 on table cart_cart_items
INFO  23-06-13 13:33:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-13 13:33:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-13 13:33:27[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-13 13:33:29[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-13 13:33:30[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-13 13:33:30[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-13 13:33:30[main] [AppInfoParser:121] - Kafka startTimeMs: 1686630810081
INFO  23-06-13 13:33:30[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-13 13:33:30[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-13 13:33:30[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-13 13:33:30[main] [ApiApplication:61] - Started ApiApplication in 8.706 seconds (JVM running for 9.489)
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=243, memberId='consumer-foo-1-76cddb11-dce4-477a-bfbe-7c5d38a71451', protocol='range'}
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 243: {consumer-foo-1-76cddb11-dce4-477a-bfbe-7c5d38a71451=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=243, memberId='consumer-foo-1-76cddb11-dce4-477a-bfbe-7c5d38a71451', protocol='range'}
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:33:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:35:42[http-nio-8090-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-13 13:35:42[http-nio-8090-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-13 13:35:42[http-nio-8090-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-13 13:38:21[http-nio-8090-exec-6] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$8bd3923b.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NullPointerException: Cannot invoke "web.api.eventSourcing.model.Cart.getSeq()" because "cart" is null
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:21)
	... 69 common frames omitted
WARN  23-06-13 13:38:37[http-nio-8090-exec-8] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$8bd3923b.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NullPointerException: Cannot invoke "web.api.eventSourcing.model.Cart.getSeq()" because "cart" is null
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:21)
	... 69 common frames omitted
WARN  23-06-13 13:39:03[http-nio-8090-exec-7] [AbstractEventProjector:24] - null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at web.api.eventSourcing.event.AbstractEventProjector.handle(AbstractEventProjector.java:21)
	at web.api.eventSourcing.event.CartEventStore.saveEvents(CartEventStore.java:41)
	at web.api.eventSourcing.event.CartEventStore$$FastClassBySpringCGLIB$$91beed65.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at web.api.eventSourcing.event.CartEventStore$$EnhancerBySpringCGLIB$$8bd3923b.saveEvents(<generated>)
	at web.api.eventSourcing.event.AbstractEventHandler.save(AbstractEventHandler.java:83)
	at web.api.service.CartService.createCart(CartService.java:47)
	at web.api.controller.CartController.createOrder(CartController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:177)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:891)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1784)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.NullPointerException: Cannot invoke "web.api.eventSourcing.model.Cart.getSeq()" because "cart" is null
	at web.api.eventSourcing.event.CartEventProjector.execute(CartEventProjector.java:24)
	... 69 common frames omitted
INFO  23-06-13 13:39:25[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-13 13:39:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=243, memberId='consumer-foo-1-76cddb11-dce4-477a-bfbe-7c5d38a71451', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-13 13:39:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=245, memberId='consumer-foo-1-a94b71e8-8c4a-4dfe-af28-6feb10822b23', protocol='range'}
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 245: {consumer-foo-1-a94b71e8-8c4a-4dfe-af28-6feb10822b23=Assignment(partitions=[my1-topic-0])}
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=245, memberId='consumer-foo-1-a94b71e8-8c4a-4dfe-af28-6feb10822b23', protocol='range'}
INFO  23-06-13 13:39:42[http-nio-8090-exec-10] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-13 13:39:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-13 13:41:23[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Unmatched Version : expected: {}, actual: {}; nested exception is java.lang.IllegalStateException: Unmatched Version : expected: {}, actual: {}
