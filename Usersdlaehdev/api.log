INFO  23-06-12 14:01:24[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 14532 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:01:24[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 26 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 139 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:01:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:01:26[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:01:26[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:01:26[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:01:26[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:01:26[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:01:26[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2516 ms
INFO  23-06-12 14:01:27[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:01:27[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:01:27[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:01:27[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:01:27[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:01:27[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:01:28[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:01:28[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:01:29[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:01:31[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:01:31[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:01:31[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:01:31[main] [AppInfoParser:121] - Kafka startTimeMs: 1686546091281
INFO  23-06-12 14:01:31[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:01:31[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:01:31[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:01:32[main] [ApiApplication:61] - Started ApiApplication in 8.073 seconds (JVM running for 8.826)
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=91, memberId='consumer-foo-1-c116a4a0-7f48-4c2d-a7e2-0c3fd7eaa2cf', protocol='range'}
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 91: {consumer-foo-1-c116a4a0-7f48-4c2d-a7e2-0c3fd7eaa2cf=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=91, memberId='consumer-foo-1-c116a4a0-7f48-4c2d-a7e2-0c3fd7eaa2cf', protocol='range'}
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:01:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:01:34[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:01:34[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:01:34[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 14:01:54[http-nio-8090-exec-1] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:01:54[http-nio-8090-exec-1] [SqlExceptionHelper:142] - ERROR: null value in column "identifier" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (null, 1, 91, 91).
INFO  23-06-12 14:01:54[http-nio-8090-exec-1] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:01:54[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [identifier" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-c116a4a0-7f48-4c2d-a7e2-0c3fd7eaa2cf sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:03:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:03:11[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:03:11[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:03:11[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:03:15[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 16388 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:03:15[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 35 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 151 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:03:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:03:17[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:03:17[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:03:17[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:03:17[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:03:18[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:03:18[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2543 ms
INFO  23-06-12 14:03:18[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:03:18[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:03:18[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:03:18[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:03:18[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:03:18[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:03:19[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:03:19[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:03:20[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:03:22[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:03:22[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:03:22[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:03:22[main] [AppInfoParser:121] - Kafka startTimeMs: 1686546202535
INFO  23-06-12 14:03:22[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:03:22[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:03:22[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:03:23[main] [ApiApplication:61] - Started ApiApplication in 8.216 seconds (JVM running for 8.973)
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=93, memberId='consumer-foo-1-735c7f4f-0af6-4cda-b43a-74a77bdc0807', protocol='range'}
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 93: {consumer-foo-1-735c7f4f-0af6-4cda-b43a-74a77bdc0807=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=93, memberId='consumer-foo-1-735c7f4f-0af6-4cda-b43a-74a77bdc0807', protocol='range'}
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:03:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:03:30[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:03:30[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:03:30[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 14:03:51[http-nio-8090-exec-2] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23505
ERROR 23-06-12 14:03:51[http-nio-8090-exec-2] [SqlExceptionHelper:142] - ERROR: duplicate key value violates unique constraint "snapshot_pkey"
  Detail: Key (identifier)=(1) already exists.
INFO  23-06-12 14:03:51[http-nio-8090-exec-2] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:03:51[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [snapshot_pkey]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-735c7f4f-0af6-4cda-b43a-74a77bdc0807 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:06:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:06:14[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:06:14[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:06:14[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:06:16[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 19672 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:06:16[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 28 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 151 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:06:17[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:06:18[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:06:18[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:06:18[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:06:18[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:06:19[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:06:19[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2466 ms
INFO  23-06-12 14:06:19[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:06:19[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:06:19[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:06:19[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:06:19[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:06:19[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:06:20[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:06:20[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:06:21[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:06:23[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:06:23[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:06:23[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:06:23[main] [AppInfoParser:121] - Kafka startTimeMs: 1686546383439
INFO  23-06-12 14:06:23[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:06:23[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:06:23[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:06:24[main] [ApiApplication:61] - Started ApiApplication in 7.843 seconds (JVM running for 8.59)
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=95, memberId='consumer-foo-1-6d85b773-4974-419b-a205-f007944c48db', protocol='range'}
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 95: {consumer-foo-1-6d85b773-4974-419b-a205-f007944c48db=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=95, memberId='consumer-foo-1-6d85b773-4974-419b-a205-f007944c48db', protocol='range'}
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:06:24[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:06:26[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:06:26[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:06:26[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 14:06:36[http-nio-8090-exec-1] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23505
ERROR 23-06-12 14:06:36[http-nio-8090-exec-1] [SqlExceptionHelper:142] - ERROR: duplicate key value violates unique constraint "snapshot_pkey"
  Detail: Key (identifier)=(1) already exists.
INFO  23-06-12 14:06:36[http-nio-8090-exec-1] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:06:36[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [snapshot_pkey]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
WARN  23-06-12 14:07:05[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s417ms601µs800ns).
INFO  23-06-12 14:07:05[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
WARN  23-06-12 14:07:05[http-nio-8090-exec-2] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23505
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
ERROR 23-06-12 14:07:05[http-nio-8090-exec-2] [SqlExceptionHelper:142] - ERROR: duplicate key value violates unique constraint "snapshot_pkey"
  Detail: Key (identifier)=(1) already exists.
INFO  23-06-12 14:07:05[http-nio-8090-exec-2] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:07:05[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [snapshot_pkey]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=95, memberId='consumer-foo-1-6d85b773-4974-419b-a205-f007944c48db', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=97, memberId='consumer-foo-1-c341debe-9fa3-41a8-9500-a6d59e683607', protocol='range'}
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 97: {consumer-foo-1-c341debe-9fa3-41a8-9500-a6d59e683607=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=97, memberId='consumer-foo-1-c341debe-9fa3-41a8-9500-a6d59e683607', protocol='range'}
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:07:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-12 14:07:12[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:07:12[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: null value in column "identifier" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (null, 1, 116, 116).
INFO  23-06-12 14:07:12[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:07:12[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [identifier" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-c341debe-9fa3-41a8-9500-a6d59e683607 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:07:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:07:42[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:07:42[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:07:42[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:07:44[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 17468 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:07:44[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 36 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 116 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:07:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:07:46[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:07:46[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:07:46[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:07:46[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:07:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:07:47[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2293 ms
INFO  23-06-12 14:07:47[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:07:47[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:07:47[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:07:47[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:07:47[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:07:47[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:07:48[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:07:48[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:07:49[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:07:51[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:07:51[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:07:51[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:07:51[main] [AppInfoParser:121] - Kafka startTimeMs: 1686546471627
INFO  23-06-12 14:07:51[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:07:51[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:07:51[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:07:52[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:07:52[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:07:52[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-12 14:07:52[main] [ApiApplication:61] - Started ApiApplication in 7.76 seconds (JVM running for 8.505)
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=99, memberId='consumer-foo-1-b224219b-7286-4d97-851b-67bcc0f218fa', protocol='range'}
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 99: {consumer-foo-1-b224219b-7286-4d97-851b-67bcc0f218fa=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=99, memberId='consumer-foo-1-b224219b-7286-4d97-851b-67bcc0f218fa', protocol='range'}
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:07:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-12 14:08:03[http-nio-8090-exec-1] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:08:03[http-nio-8090-exec-1] [SqlExceptionHelper:142] - ERROR: null value in column "identifier" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (null, 1, 127, 127).
INFO  23-06-12 14:08:03[http-nio-8090-exec-1] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:08:03[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [identifier" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
WARN  23-06-12 14:13:21[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m33s907ms510µs900ns).
INFO  23-06-12 14:13:21[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 14:13:21[http-nio-8090-exec-2] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:13:21[http-nio-8090-exec-2] [SqlExceptionHelper:142] - ERROR: null value in column "identifier" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (null, 1, 128, 128).
INFO  23-06-12 14:13:21[http-nio-8090-exec-2] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:13:21[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [identifier" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:13:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:13:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:13:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:13:22[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:13:22[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:13:22[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:13:23[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 21652 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:13:23[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 121 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:24[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:13:25[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:13:25[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:13:25[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:13:25[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:13:26[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:13:26[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2533 ms
INFO  23-06-12 14:13:26[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:13:26[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:13:26[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:13:27[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:13:27[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:13:27[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:13:28[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:13:28[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:13:28[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
INFO  23-06-12 14:13:28[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:13:28[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:13:28[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:13:28[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:13:28[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:13:28[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 80 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'seq' found for type 'Snapshot'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 84 common frames omitted
INFO  23-06-12 14:13:33[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32052 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:13:33[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 37 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 125 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:13:34[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:13:35[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:13:35[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:13:35[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:13:35[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:13:35[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:13:35[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2494 ms
INFO  23-06-12 14:13:36[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:13:36[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:13:36[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:13:36[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:13:36[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:13:36[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:13:37[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:13:37[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:13:37[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
INFO  23-06-12 14:13:37[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:13:37[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:13:37[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:13:37[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:13:37[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:13:37[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long); Reason: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional web.api.repository.SnapshotRepository.findFirstOrderBySeq(java.lang.Long)! No property 'seq' found for type 'Snapshot'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 80 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'seq' found for type 'Snapshot'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 84 common frames omitted
INFO  23-06-12 14:14:13[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 23488 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:14:13[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 28 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 128 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:14:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:14:15[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:14:15[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:14:15[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:14:15[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:14:16[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:14:16[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2468 ms
INFO  23-06-12 14:14:16[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:14:16[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:14:16[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:14:16[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:14:17[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:14:17[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:14:17[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:14:17[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:14:18[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:14:20[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:14:21[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:14:21[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:14:21[main] [AppInfoParser:121] - Kafka startTimeMs: 1686546861184
INFO  23-06-12 14:14:21[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:14:21[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:14:21[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:14:22[main] [ApiApplication:61] - Started ApiApplication in 8.602 seconds (JVM running for 9.359)
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=101, memberId='consumer-foo-1-cc1ddc14-1e0e-4743-9c79-a8d3bbe0713b', protocol='range'}
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 101: {consumer-foo-1-cc1ddc14-1e0e-4743-9c79-a8d3bbe0713b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=101, memberId='consumer-foo-1-cc1ddc14-1e0e-4743-9c79-a8d3bbe0713b', protocol='range'}
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:14:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:15:01[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:15:01[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:15:01[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 14:15:11[http-nio-8090-exec-3] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:15:11[http-nio-8090-exec-3] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (131, 1, 131, null).
INFO  23-06-12 14:15:11[http-nio-8090-exec-3] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:15:11[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:15:41[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 14:15:41[http-nio-8090-exec-4] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
ERROR 23-06-12 14:15:41[http-nio-8090-exec-4] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (132, 1, 132, null).
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 14:15:41[http-nio-8090-exec-4] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:15:41[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=101, memberId='consumer-foo-1-cc1ddc14-1e0e-4743-9c79-a8d3bbe0713b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=103, memberId='consumer-foo-1-051e4aa1-a077-4253-8aad-3c898920ac5d', protocol='range'}
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 103: {consumer-foo-1-051e4aa1-a077-4253-8aad-3c898920ac5d=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=103, memberId='consumer-foo-1-051e4aa1-a077-4253-8aad-3c898920ac5d', protocol='range'}
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:15:41[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:27:56[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 14:27:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=103, memberId='consumer-foo-1-051e4aa1-a077-4253-8aad-3c898920ac5d', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=105, memberId='consumer-foo-1-488721c7-697a-45b5-83fc-584cb871323a', protocol='range'}
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 105: {consumer-foo-1-488721c7-697a-45b5-83fc-584cb871323a=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=105, memberId='consumer-foo-1-488721c7-697a-45b5-83fc-584cb871323a', protocol='range'}
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:28:14[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:28:49[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 14:28:49[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s729ms62µs300ns).
INFO  23-06-12 14:28:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:28:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=105, memberId='consumer-foo-1-488721c7-697a-45b5-83fc-584cb871323a', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=107, memberId='consumer-foo-1-22b3adc3-707e-47d6-9438-4ef3a345bc5b', protocol='range'}
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 107: {consumer-foo-1-22b3adc3-707e-47d6-9438-4ef3a345bc5b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=107, memberId='consumer-foo-1-22b3adc3-707e-47d6-9438-4ef3a345bc5b', protocol='range'}
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:28:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-22b3adc3-707e-47d6-9438-4ef3a345bc5b sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:30:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:30:42[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:30:42[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:30:42[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:30:44[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 20164 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:30:44[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 112 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:30:45[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:30:46[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:30:46[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:30:46[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:30:46[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:30:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:30:47[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2441 ms
INFO  23-06-12 14:30:47[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:30:47[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:30:47[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:30:47[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:30:47[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:30:47[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:30:48[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:30:48[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:30:49[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:30:51[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:30:51[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:30:51[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:30:51[main] [AppInfoParser:121] - Kafka startTimeMs: 1686547851515
INFO  23-06-12 14:30:51[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:30:51[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:30:51[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:30:51[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:30:51[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:30:51[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
INFO  23-06-12 14:30:52[main] [ApiApplication:61] - Started ApiApplication in 8.157 seconds (JVM running for 8.892)
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=109, memberId='consumer-foo-1-244ab2b2-ca8e-4bed-b225-3d4129569e47', protocol='range'}
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 109: {consumer-foo-1-244ab2b2-ca8e-4bed-b225-3d4129569e47=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=109, memberId='consumer-foo-1-244ab2b2-ca8e-4bed-b225-3d4129569e47', protocol='range'}
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:30:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:30:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:30:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-12 14:30:57[http-nio-8090-exec-2] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:30:57[http-nio-8090-exec-2] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (144, 1, 144, null).
INFO  23-06-12 14:30:57[http-nio-8090-exec-2] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:30:57[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
WARN  23-06-12 14:31:00[http-nio-8090-exec-4] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:31:00[http-nio-8090-exec-4] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (145, 1, 145, null).
INFO  23-06-12 14:31:00[http-nio-8090-exec-4] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:31:00[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
WARN  23-06-12 14:31:37[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49s233ms630µs600ns).
INFO  23-06-12 14:31:37[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
WARN  23-06-12 14:31:37[http-nio-8090-exec-5] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
ERROR 23-06-12 14:31:37[http-nio-8090-exec-5] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (146, 1, 146, null).
INFO  23-06-12 14:31:37[http-nio-8090-exec-5] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:31:37[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
WARN  23-06-12 14:31:37[http-nio-8090-exec-10] [SqlExceptionHelper:137] - SQL Error: 0, SQLState: 23502
ERROR 23-06-12 14:31:37[http-nio-8090-exec-10] [SqlExceptionHelper:142] - ERROR: null value in column "seq" of relation "snapshot" violates not-null constraint
  Detail: Failing row contains (147, 1, 147, null).
INFO  23-06-12 14:31:37[http-nio-8090-exec-10] [AbstractBatchImpl:213] - HHH000010: On release of batch it still contained JDBC statements
INFO  23-06-12 14:31:37[http-nio-8090-exec-10] [ExceptHandler:31] - ExceptHandler.commonException = could not execute statement; SQL [n/a]; constraint [seq" of relation "snapshot]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:31:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:31:37[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:31:37[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:31:37[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:31:39[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 11080 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:31:39[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 141 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:31:40[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:31:41[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:31:41[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:31:41[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:31:41[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:31:41[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:31:41[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2497 ms
INFO  23-06-12 14:31:42[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:31:42[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:31:42[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:31:42[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:31:42[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:31:42[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:31:43[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:31:43[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:31:44[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:31:45[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:31:46[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:31:46[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:31:46[main] [AppInfoParser:121] - Kafka startTimeMs: 1686547906117
INFO  23-06-12 14:31:46[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:31:46[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:31:46[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:31:46[main] [ApiApplication:61] - Started ApiApplication in 7.98 seconds (JVM running for 8.742)
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=111, memberId='consumer-foo-1-7bfd8855-a1ee-4ef7-8b72-ce0556b5d1ce', protocol='range'}
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 111: {consumer-foo-1-7bfd8855-a1ee-4ef7-8b72-ce0556b5d1ce=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=111, memberId='consumer-foo-1-7bfd8855-a1ee-4ef7-8b72-ce0556b5d1ce', protocol='range'}
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:31:47[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:31:48[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:31:48[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:31:48[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-7bfd8855-a1ee-4ef7-8b72-ce0556b5d1ce sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:32:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:32:25[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43824 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:32:25[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 35 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 140 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:32:26[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:32:27[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:32:27[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:32:27[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:32:27[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:32:27[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:32:27[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2453 ms
INFO  23-06-12 14:32:28[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:32:28[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:32:28[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:32:28[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:32:28[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:32:28[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:32:29[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:32:29[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:32:30[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:32:31[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:32:31[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:32:31[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:32:31[main] [AppInfoParser:121] - Kafka startTimeMs: 1686547951945
INFO  23-06-12 14:32:31[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:32:31[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:32:31[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:32:32[main] [ApiApplication:61] - Started ApiApplication in 7.856 seconds (JVM running for 8.572)
INFO  23-06-12 14:32:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:32:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:32:32[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=113, memberId='consumer-foo-1-8c15633a-f0ac-4729-9e73-56388f698707', protocol='range'}
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 113: {consumer-foo-1-8c15633a-f0ac-4729-9e73-56388f698707=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=113, memberId='consumer-foo-1-8c15633a-f0ac-4729-9e73-56388f698707', protocol='range'}
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:32:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-8c15633a-f0ac-4729-9e73-56388f698707 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:33:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:33:59[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:33:59[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:33:59[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:34:50[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 25788 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:34:50[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 32 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:34:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 4 JPA repository interfaces.
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:34:51[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
INFO  23-06-12 14:34:52[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:34:52[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:34:52[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:34:52[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:34:52[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:34:52[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2400 ms
INFO  23-06-12 14:34:52[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:34:52[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:34:52[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:34:53[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:34:53[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:34:53[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:34:53[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:34:53[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:34:54[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:34:56[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:34:56[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:34:56[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:34:56[main] [AppInfoParser:121] - Kafka startTimeMs: 1686548096621
INFO  23-06-12 14:34:56[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:34:56[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:34:56[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:34:57[main] [ApiApplication:61] - Started ApiApplication in 7.728 seconds (JVM running for 8.468)
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=115, memberId='consumer-foo-1-7a4ccbfc-ed03-40bc-808e-dee596078b2d', protocol='range'}
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 115: {consumer-foo-1-7a4ccbfc-ed03-40bc-808e-dee596078b2d=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=115, memberId='consumer-foo-1-7a4ccbfc-ed03-40bc-808e-dee596078b2d', protocol='range'}
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:34:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:35:23[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:35:23[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:35:23[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-7a4ccbfc-ed03-40bc-808e-dee596078b2d sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 14:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 14:48:18[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:48:18[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:48:18[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:48:22[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 39164 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:48:22[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 128 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:48:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:48:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:48:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:48:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:48:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:48:24[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:48:24[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2695 ms
INFO  23-06-12 14:48:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:48:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:48:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:48:25[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:48:25[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:48:25[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:48:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:48:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:48:26[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
INFO  23-06-12 14:48:26[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:48:26[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:48:26[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:48:26[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:48:27[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:48:27[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 61 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 85 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at web.api.config.RedisConfig.redisTemplate(RedisConfig.java:139)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$redisTemplate$0(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.redisTemplate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 96 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 119 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93)
	at web.api.config.RedisConfig.jedisConnectionFactory(RedisConfig.java:129)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$jedisConnectionFactory$2(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 120 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.GeoUnit
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 132 common frames omitted
INFO  23-06-12 14:49:20[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 27144 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:49:20[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:49:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:49:22[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:49:22[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:49:22[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:49:22[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:49:22[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:49:22[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2624 ms
INFO  23-06-12 14:49:23[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:49:23[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:49:23[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:49:23[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:49:23[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:49:23[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:49:24[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:49:24[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:49:24[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
INFO  23-06-12 14:49:24[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:49:24[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:49:24[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:49:24[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:49:24[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:49:24[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 61 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 85 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at web.api.config.RedisConfig.redisTemplate(RedisConfig.java:59)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$redisTemplate$1(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.redisTemplate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 96 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 119 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93)
	at web.api.config.RedisConfig.jedisConnectionFactory(RedisConfig.java:49)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$jedisConnectionFactory$0(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 120 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.GeoUnit
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 132 common frames omitted
INFO  23-06-12 14:50:53[main] [ApiApplicationTests:55] - Starting ApiApplicationTests using Java 17.0.3 on limdoyoung with PID 8752 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:50:53[main] [ApiApplicationTests:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 116 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:54[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:50:55[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:50:56[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:50:56[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:50:56[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:50:56[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:50:56[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:50:57[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:50:57[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:50:58[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:50:58[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:50:58[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:50:58[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:50:58[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:50:58[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:50:58[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1b84f475] to prepare test instance [web.api.ApiApplicationTests@1930e8ef]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:50:58[main] [SpringBootTestContextBootstrapper:305] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [web.api.controller.MemberControllerTest], using SpringBootContextLoader
INFO  23-06-12 14:50:58[main] [AbstractContextLoader:264] - Could not detect default resource locations for test class [web.api.controller.MemberControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
INFO  23-06-12 14:50:58[main] [AnnotationConfigContextLoaderUtils:83] - Could not detect default configuration classes for test class [web.api.controller.MemberControllerTest]: MemberControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
INFO  23-06-12 14:50:58[main] [SpringBootTestContextBootstrapper:239] - Found @SpringBootConfiguration web.api.ApiApplication for test class web.api.controller.MemberControllerTest
INFO  23-06-12 14:50:58[main] [SpringBootTestContextBootstrapper:245] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  23-06-12 14:50:58[main] [SpringBootTestContextBootstrapper:174] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@488c608a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b6c55b6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55e02661, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7f38545a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@549be307, org.springframework.test.context.support.DirtiesContextTestExecutionListener@d03cdc7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@59043128, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@642334d6, org.springframework.test.context.event.EventPublishingTestExecutionListener@6f2b608e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c55e559, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@420068a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@79d8075c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d4337f9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1e6f7c25, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1a7f2d34]
INFO  23-06-12 14:50:58[main] [MemberControllerTest:55] - Starting MemberControllerTest using Java 17.0.3 on limdoyoung with PID 8752 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:50:58[main] [MemberControllerTest:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:50:58[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:50:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:59[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:50:59[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:50:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:50:59[main] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  23-06-12 14:50:59[main] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  23-06-12 14:50:59[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:50:59[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:50:59[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:50:59[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:50:59[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:50:59[main] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  23-06-12 14:50:59[main] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  23-06-12 14:50:59[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:50:59[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:50:59[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@488c608a] to prepare test instance [web.api.controller.MemberControllerTest@25bbca43]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:50:59[main] [MemberControllerTest:55] - Starting MemberControllerTest using Java 17.0.3 on limdoyoung with PID 8752 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:50:59[main] [MemberControllerTest:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 13 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:51:00[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:51:00[main] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  23-06-12 14:51:00[main] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  23-06-12 14:51:00[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:51:00[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:51:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:51:00[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:51:00[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:51:00[main] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  23-06-12 14:51:00[main] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  23-06-12 14:51:00[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:51:00[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:51:00[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@488c608a] to prepare test instance [web.api.controller.MemberControllerTest@44986fae]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:51:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 23408 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:51:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 145 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:51:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:51:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:51:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:51:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:51:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:51:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:51:29[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2613 ms
INFO  23-06-12 14:51:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:51:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:51:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:51:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:51:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:51:30[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:51:31[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:51:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:51:31[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
INFO  23-06-12 14:51:31[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:51:31[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:51:31[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:51:31[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:51:31[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:51:31[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Cannot resolve reference to bean 'redisKeyValueTemplate' while setting bean property 'keyValueOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueTemplate': Cannot resolve reference to bean 'redisKeyValueAdapter' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 61 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisKeyValueAdapter': Cannot resolve reference to bean 'redisTemplate' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:693)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 73 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisTemplate' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 85 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.core.RedisTemplate]: Factory method 'redisTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 95 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jedisConnectionFactory' defined in class path resource [web/api/config/RedisConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at web.api.config.RedisConfig.redisTemplate(RedisConfig.java:59)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$redisTemplate$1(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.redisTemplate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 96 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.redis.connection.jedis.JedisConnectionFactory]: Factory method 'jedisConnectionFactory' threw exception; nested exception is java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 119 common frames omitted
Caused by: java.lang.NoClassDefFoundError: redis/clients/jedis/GeoUnit
	at org.springframework.data.redis.connection.jedis.JedisConnectionFactory.<clinit>(JedisConnectionFactory.java:93)
	at web.api.config.RedisConfig.jedisConnectionFactory(RedisConfig.java:49)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.CGLIB$jedisConnectionFactory$0(<generated>)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885$$FastClassBySpringCGLIB$$ee2075e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at web.api.config.RedisConfig$$EnhancerBySpringCGLIB$$e9b92885.jedisConnectionFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 120 common frames omitted
Caused by: java.lang.ClassNotFoundException: redis.clients.jedis.GeoUnit
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	... 132 common frames omitted
INFO  23-06-12 14:55:03[main] [ApiApplicationTests:55] - Starting ApiApplicationTests using Java 17.0.3 on limdoyoung with PID 39540 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:55:03[main] [ApiApplicationTests:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:55:03[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:03[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:04[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 22 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:55:05[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:55:05[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:55:05[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:55:05[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:55:05[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:55:05[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:55:06[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:55:06[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:55:07[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:55:07[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:55:07[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:55:07[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:55:07[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:55:07[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:55:07[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@1b84f475] to prepare test instance [web.api.ApiApplicationTests@69cc3370]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:55:07[main] [SpringBootTestContextBootstrapper:305] - Neither @ContextConfiguration nor @ContextHierarchy found for test class [web.api.controller.MemberControllerTest], using SpringBootContextLoader
INFO  23-06-12 14:55:07[main] [AbstractContextLoader:264] - Could not detect default resource locations for test class [web.api.controller.MemberControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
INFO  23-06-12 14:55:07[main] [AnnotationConfigContextLoaderUtils:83] - Could not detect default configuration classes for test class [web.api.controller.MemberControllerTest]: MemberControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
INFO  23-06-12 14:55:07[main] [SpringBootTestContextBootstrapper:239] - Found @SpringBootConfiguration web.api.ApiApplication for test class web.api.controller.MemberControllerTest
INFO  23-06-12 14:55:07[main] [SpringBootTestContextBootstrapper:245] - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
INFO  23-06-12 14:55:07[main] [SpringBootTestContextBootstrapper:174] - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7afac89a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@76d220eb, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@276eafad, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@29dcad7e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5ce1ec7, org.springframework.test.context.support.DirtiesContextTestExecutionListener@627cb3ed, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30bd6bc8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c4697fc, org.springframework.test.context.event.EventPublishingTestExecutionListener@90b9695, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@e6fbf82, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@55d776ac, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1de6f29d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@488c608a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b6c55b6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@55e02661]
INFO  23-06-12 14:55:07[main] [MemberControllerTest:55] - Starting MemberControllerTest using Java 17.0.3 on limdoyoung with PID 39540 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:55:07[main] [MemberControllerTest:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 11 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:07[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 15 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:55:08[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:55:08[main] [HikariDataSource:110] - HikariPool-2 - Starting...
INFO  23-06-12 14:55:08[main] [HikariDataSource:123] - HikariPool-2 - Start completed.
INFO  23-06-12 14:55:08[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:55:08[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:55:08[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:55:08[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:55:08[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:55:08[main] [HikariDataSource:350] - HikariPool-2 - Shutdown initiated...
INFO  23-06-12 14:55:08[main] [HikariDataSource:352] - HikariPool-2 - Shutdown completed.
INFO  23-06-12 14:55:08[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:55:08[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:55:08[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@7afac89a] to prepare test instance [web.api.controller.MemberControllerTest@16c6d5a2]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:55:08[main] [MemberControllerTest:55] - Starting MemberControllerTest using Java 17.0.3 on limdoyoung with PID 39540 (started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:55:08[main] [MemberControllerTest:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 13 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:55:09[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:55:09[main] [HikariDataSource:110] - HikariPool-3 - Starting...
INFO  23-06-12 14:55:09[main] [HikariDataSource:123] - HikariPool-3 - Start completed.
INFO  23-06-12 14:55:09[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:55:09[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:55:09[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:55:09[main] [GenericWebApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:55:09[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:55:09[main] [HikariDataSource:350] - HikariPool-3 - Shutdown initiated...
INFO  23-06-12 14:55:09[main] [HikariDataSource:352] - HikariPool-3 - Shutdown completed.
INFO  23-06-12 14:55:09[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:55:09[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
ERROR 23-06-12 14:55:09[main] [TestContextManager:252] - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@7afac89a] to prepare test instance [web.api.controller.MemberControllerTest@4f93816d]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:136)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:141)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:90)
	... 67 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 99 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 113 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 124 common frames omitted
INFO  23-06-12 14:55:46[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 41476 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:55:46[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 113 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:55:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 16 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:55:48[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:55:48[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:55:48[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:55:48[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:55:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:55:49[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2568 ms
INFO  23-06-12 14:55:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:55:49[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:55:49[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:55:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:55:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:55:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:55:50[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:55:50[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:55:51[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:55:51[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:55:51[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:55:51[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:55:51[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:55:51[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:55:51[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
INFO  23-06-12 14:56:46[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 37664 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:56:46[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 39 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 115 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:56:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 15 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:56:48[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:56:48[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:56:48[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:56:48[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:56:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:56:49[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2554 ms
INFO  23-06-12 14:56:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:56:49[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:56:49[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:56:49[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:56:49[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:56:49[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:56:50[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:56:50[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:56:51[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:56:51[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:56:51[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:56:51[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:56:51[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:56:51[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:56:51[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
INFO  23-06-12 14:57:13[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 40240 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:57:13[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 111 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:57:15[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:57:15[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:57:15[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:57:15[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:57:15[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:57:15[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2477 ms
INFO  23-06-12 14:57:16[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:57:16[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:57:16[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:57:16[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:57:16[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:57:16[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:57:17[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:57:17[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:57:17[main] [AnnotationConfigServletWebServerApplicationContext:591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
INFO  23-06-12 14:57:17[main] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 14:57:17[main] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 14:57:17[main] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 14:57:17[main] [StandardService:173] - Stopping service [Tomcat]
INFO  23-06-12 14:57:17[main] [ConditionEvaluationReportLoggingListener:136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
ERROR 23-06-12 14:57:17[main] [SpringApplication:821] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartController' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\controller\CartController.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at web.api.ApiApplication.main(ApiApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartService' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\service\CartService.class]: Unsatisfied dependency expressed through constructor parameter 2; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'cartEventHandler' defined in file [C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes\web\api\eventSourcing\event\CartEventHandler.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'snapshotRepository' defined in web.api.repository.SnapshotRepository defined in @EnableRedisRepositories declared on RedisRepositoriesRegistrar.EnableRedisRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.data.mapping.MappingException: Entity web.api.eventSourcing.snapshot.Snapshot requires to have an explicit id field. Did you forget to provide one using @Id?
	at org.springframework.data.redis.repository.core.MappingRedisEntityInformation.<init>(MappingRedisEntityInformation.java:45)
	at org.springframework.data.redis.repository.support.RedisRepositoryFactory.getEntityInformation(RedisRepositoryFactory.java:111)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory.getTargetRepository(KeyValueRepositoryFactory.java:132)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:325)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean.afterPropertiesSet(KeyValueRepositoryFactoryBean.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 58 common frames omitted
INFO  23-06-12 14:57:54[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 14028 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 14:57:54[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 14:57:55[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 14:57:56[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 14:57:56[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:57:56[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 14:57:56[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 14:57:57[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 14:57:57[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2472 ms
INFO  23-06-12 14:57:57[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 14:57:57[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 14:57:57[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 14:57:57[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 14:57:58[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 14:57:58[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 14:57:58[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 14:57:58[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 14:57:59[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 14:58:01[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 14:58:01[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 14:58:01[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 14:58:01[main] [AppInfoParser:121] - Kafka startTimeMs: 1686549481115
INFO  23-06-12 14:58:01[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 14:58:01[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 14:58:01[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 14:58:01[main] [ApiApplication:61] - Started ApiApplication in 7.541 seconds (JVM running for 8.319)
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=117, memberId='consumer-foo-1-af5583ed-bb9b-425b-b771-b88fedf8ea77', protocol='range'}
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 117: {consumer-foo-1-af5583ed-bb9b-425b-b771-b88fedf8ea77=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=117, memberId='consumer-foo-1-af5583ed-bb9b-425b-b771-b88fedf8ea77', protocol='range'}
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 14:58:02[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 14:58:17[http-nio-8090-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 14:58:17[http-nio-8090-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 14:58:17[http-nio-8090-exec-2] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 15:00:30[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m2s358ms14µs300ns).
INFO  23-06-12 15:00:30[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=117, memberId='consumer-foo-1-af5583ed-bb9b-425b-b771-b88fedf8ea77', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=119, memberId='consumer-foo-1-79cb517f-6fe1-4edf-8f64-c4994c9f5ffd', protocol='range'}
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 119: {consumer-foo-1-79cb517f-6fe1-4edf-8f64-c4994c9f5ffd=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=119, memberId='consumer-foo-1-79cb517f-6fe1-4edf-8f64-c4994c9f5ffd', protocol='range'}
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 15:00:30[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 15:08:54[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 15:08:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:08:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 15:08:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
WARN  23-06-12 15:09:18[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m48s79ms219µs).
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-79cb517f-6fe1-4edf-8f64-c4994c9f5ffd sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 15:12:44[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 15:12:44[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 15:12:44[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 15:12:44[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 15:12:46[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 44624 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 15:12:46[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:12:47[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 117 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:12:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 15:12:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 15:12:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:12:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 15:12:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 15:12:49[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 15:12:49[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2659 ms
INFO  23-06-12 15:12:49[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 15:12:50[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 15:12:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 15:12:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 15:12:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 15:12:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 15:12:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 15:12:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 15:12:52[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 15:12:54[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 15:12:54[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 15:12:54[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 15:12:54[main] [AppInfoParser:121] - Kafka startTimeMs: 1686550374496
INFO  23-06-12 15:12:54[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 15:12:54[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:12:54[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 15:12:55[main] [ApiApplication:61] - Started ApiApplication in 8.908 seconds (JVM running for 9.691)
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=121, memberId='consumer-foo-1-e5e2a71c-0e8e-4453-9bc0-dcfeda91e420', protocol='range'}
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 121: {consumer-foo-1-e5e2a71c-0e8e-4453-9bc0-dcfeda91e420=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=121, memberId='consumer-foo-1-e5e2a71c-0e8e-4453-9bc0-dcfeda91e420', protocol='range'}
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 15:12:55[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 15:13:01[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 15:13:01[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 15:13:01[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-e5e2a71c-0e8e-4453-9bc0-dcfeda91e420 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 15:13:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 15:13:25[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 15:13:25[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 15:13:25[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 15:13:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 25532 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 15:13:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:13:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 38 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 15:13:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 15:13:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:13:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 15:13:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 15:13:30[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 15:13:30[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2494 ms
INFO  23-06-12 15:13:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 15:13:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 15:13:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 15:13:30[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 15:13:30[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 15:13:30[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 15:13:31[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 15:13:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 15:13:32[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 15:13:33[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 15:13:34[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 15:13:34[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 15:13:34[main] [AppInfoParser:121] - Kafka startTimeMs: 1686550414034
INFO  23-06-12 15:13:34[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 15:13:34[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:13:34[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 15:13:34[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 15:13:34[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 15:13:34[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
INFO  23-06-12 15:13:34[main] [ApiApplication:61] - Started ApiApplication in 7.862 seconds (JVM running for 8.629)
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=123, memberId='consumer-foo-1-5a0ebdf9-3f49-4097-8001-4d196b528658', protocol='range'}
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 123: {consumer-foo-1-5a0ebdf9-3f49-4097-8001-4d196b528658=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=123, memberId='consumer-foo-1-5a0ebdf9-3f49-4097-8001-4d196b528658', protocol='range'}
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 15:13:35[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-5a0ebdf9-3f49-4097-8001-4d196b528658 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 15:16:06[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 15:16:06[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 15:16:06[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 15:16:06[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 15:16:08[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 29792 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 15:16:08[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:16:09[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 124 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:16:10[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 15:16:11[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 15:16:11[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:16:11[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 15:16:11[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 15:16:11[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 15:16:11[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2646 ms
INFO  23-06-12 15:16:11[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 15:16:11[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 15:16:12[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 15:16:12[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 15:16:12[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 15:16:12[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 15:16:13[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 15:16:13[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 15:16:13[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 15:16:15[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 15:16:15[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 15:16:15[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 15:16:15[main] [AppInfoParser:121] - Kafka startTimeMs: 1686550575690
INFO  23-06-12 15:16:15[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 15:16:15[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:16:15[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 15:16:16[main] [ApiApplication:61] - Started ApiApplication in 7.797 seconds (JVM running for 8.605)
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=125, memberId='consumer-foo-1-a3d04ca1-5f49-49ae-8b01-18c32d1dd7d9', protocol='range'}
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 125: {consumer-foo-1-a3d04ca1-5f49-49ae-8b01-18c32d1dd7d9=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=125, memberId='consumer-foo-1-a3d04ca1-5f49-49ae-8b01-18c32d1dd7d9', protocol='range'}
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 15:16:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 15:16:27[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 15:16:27[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 15:16:27[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-a3d04ca1-5f49-49ae-8b01-18c32d1dd7d9 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 15:48:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 15:48:18[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 15:48:18[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 15:48:18[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 15:48:20[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 43048 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 15:48:20[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 113 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 15:48:21[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 15:48:22[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 15:48:22[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:48:22[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 15:48:22[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 15:48:23[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 15:48:23[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2720 ms
INFO  23-06-12 15:48:23[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 15:48:23[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 15:48:23[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 15:48:23[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 15:48:24[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 15:48:24[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 15:48:24[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 15:48:24[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 15:48:25[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 15:48:27[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 15:48:27[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 15:48:27[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 15:48:27[main] [AppInfoParser:121] - Kafka startTimeMs: 1686552507138
INFO  23-06-12 15:48:27[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 15:48:27[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 15:48:27[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 15:48:27[main] [ApiApplication:61] - Started ApiApplication in 7.814 seconds (JVM running for 8.708)
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=127, memberId='consumer-foo-1-91bd0280-3029-450b-82e2-d553172ae59b', protocol='range'}
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 127: {consumer-foo-1-91bd0280-3029-450b-82e2-d553172ae59b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=127, memberId='consumer-foo-1-91bd0280-3029-450b-82e2-d553172ae59b', protocol='range'}
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 15:48:28[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 15:48:39[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 15:48:39[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 15:48:39[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 16:09:55[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=20m1s176ms280µs100ns).
INFO  23-06-12 16:09:56[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:481] - [Consumer clientId=consumer-foo-1, groupId=foo] Error sending fetch request (sessionId=877255212, epoch=178) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=127, memberId='consumer-foo-1-91bd0280-3029-450b-82e2-d553172ae59b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=129, memberId='consumer-foo-1-9f76a120-68e2-4343-afb0-b74b6eb31304', protocol='range'}
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 129: {consumer-foo-1-9f76a120-68e2-4343-afb0-b74b6eb31304=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=129, memberId='consumer-foo-1-9f76a120-68e2-4343-afb0-b74b6eb31304', protocol='range'}
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:09:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-9f76a120-68e2-4343-afb0-b74b6eb31304 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 16:15:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 16:15:50[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 16:15:50[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 16:15:50[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 16:15:51[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 30512 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 16:15:51[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 104 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:15:52[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 16 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 16:15:53[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 16:15:53[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:15:53[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 16:15:53[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 16:15:54[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 16:15:54[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2340 ms
INFO  23-06-12 16:15:54[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 16:15:54[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 16:15:54[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 16:15:54[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 16:15:54[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 16:15:54[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 16:15:55[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 16:15:55[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 16:15:56[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 16:15:58[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 16:15:58[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 16:15:58[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 16:15:58[main] [AppInfoParser:121] - Kafka startTimeMs: 1686554158226
INFO  23-06-12 16:15:58[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 16:15:58[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:15:58[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 16:15:59[main] [ApiApplication:61] - Started ApiApplication in 7.803 seconds (JVM running for 8.678)
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=131, memberId='consumer-foo-1-818fe03b-0d10-4fb8-9008-9d215bf08de2', protocol='range'}
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 131: {consumer-foo-1-818fe03b-0d10-4fb8-9008-9d215bf08de2=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=131, memberId='consumer-foo-1-818fe03b-0d10-4fb8-9008-9d215bf08de2', protocol='range'}
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:15:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:16:02[http-nio-8090-exec-3] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 16:16:02[http-nio-8090-exec-3] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 16:16:02[http-nio-8090-exec-3] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 16:18:39[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 16:18:39[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m44s401ms254µs800ns).
INFO  23-06-12 16:18:49[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 39412 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 16:18:49[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 110 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:18:50[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 12 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 16:18:51[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 16:18:51[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:18:51[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 16:18:51[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 16:18:52[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 16:18:52[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2228 ms
INFO  23-06-12 16:18:52[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 16:18:52[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 16:18:52[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 16:18:52[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 16:18:52[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 16:18:52[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 16:18:53[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 16:18:53[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 16:18:54[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 16:18:55[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 16:18:55[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 16:18:55[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 16:18:55[main] [AppInfoParser:121] - Kafka startTimeMs: 1686554335968
INFO  23-06-12 16:18:55[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 16:18:55[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:18:56[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 16:18:56[main] [ApiApplication:61] - Started ApiApplication in 7.353 seconds (JVM running for 8.249)
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=133, memberId='consumer-foo-1-71b11b42-c82c-4579-aeab-a0b4e51d22ff', protocol='range'}
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 133: {consumer-foo-1-71b11b42-c82c-4579-aeab-a0b4e51d22ff=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=133, memberId='consumer-foo-1-71b11b42-c82c-4579-aeab-a0b4e51d22ff', protocol='range'}
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:18:57[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:18:58[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 16:18:58[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 16:18:58[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 16:20:08[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m15s809ms134µs100ns).
INFO  23-06-12 16:20:08[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=133, memberId='consumer-foo-1-71b11b42-c82c-4579-aeab-a0b4e51d22ff', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=135, memberId='consumer-foo-1-24e558be-53e6-4024-8558-6cbbb4f617bc', protocol='range'}
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 135: {consumer-foo-1-24e558be-53e6-4024-8558-6cbbb4f617bc=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=135, memberId='consumer-foo-1-24e558be-53e6-4024-8558-6cbbb4f617bc', protocol='range'}
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-24e558be-53e6-4024-8558-6cbbb4f617bc sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 16:20:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 16:20:08[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 16:20:08[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 16:20:08[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 16:20:10[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 11944 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 16:20:10[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:20:11[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 16:20:12[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 16:20:12[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:20:12[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 16:20:12[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 16:20:13[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 16:20:13[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2398 ms
INFO  23-06-12 16:20:13[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 16:20:13[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 16:20:13[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 16:20:13[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 16:20:13[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 16:20:13[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 16:20:14[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 16:20:14[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 16:20:15[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 16:20:16[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 16:20:17[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 16:20:17[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 16:20:17[main] [AppInfoParser:121] - Kafka startTimeMs: 1686554417005
INFO  23-06-12 16:20:17[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 16:20:17[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:20:17[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 16:20:17[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 16:20:17[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 16:20:17[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-12 16:20:17[main] [ApiApplication:61] - Started ApiApplication in 7.721 seconds (JVM running for 8.572)
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=137, memberId='consumer-foo-1-8083b6b2-b0e8-45b2-924f-1f4ef6984729', protocol='range'}
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 137: {consumer-foo-1-8083b6b2-b0e8-45b2-924f-1f4ef6984729=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=137, memberId='consumer-foo-1-8083b6b2-b0e8-45b2-924f-1f4ef6984729', protocol='range'}
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:20:18[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:20:58[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=null, cartItems=[web.api.eventSourcing.model.CartItem@7626ff49], created=2023-06-12T16:20:58.950544900)')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:21:01[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=null, cartItems=[web.api.eventSourcing.model.CartItem@3df7e6a3], created=2023-06-12T16:21:01.546091500)')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:22:06[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=null, cartItems=[web.api.eventSourcing.model.CartItem@702d5663], created=2023-06-12T16:22:06.471670100)"; line: 1, column: 5]
INFO  23-06-12 16:22:59[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 16:22:59[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=45s971ms340µs500ns).
INFO  23-06-12 16:23:21[http-nio-8090-exec-8] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=null, cartItems=[web.api.eventSourcing.model.CartItem@324a288d], created=2023-06-12T16:22:35.208909200)"; line: 1, column: 5]
INFO  23-06-12 16:23:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:23:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=137, memberId='consumer-foo-1-8083b6b2-b0e8-45b2-924f-1f4ef6984729', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=139, memberId='consumer-foo-1-860416b9-38fb-4447-8c1f-c1053db5241c', protocol='range'}
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 139: {consumer-foo-1-860416b9-38fb-4447-8c1f-c1053db5241c=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=139, memberId='consumer-foo-1-860416b9-38fb-4447-8c1f-c1053db5241c', protocol='range'}
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:23:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-12 16:25:58[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m58s94ms806µs300ns).
INFO  23-06-12 16:25:58[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:25:58[http-nio-8090-exec-9] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=null, cartItems=[web.api.eventSourcing.model.CartItem@4f38b0b2], created=2023-06-12T16:23:23.898383500)"; line: 1, column: 5]
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 16:25:58[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 16:25:58[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 16:25:58[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 16:25:58[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 16:25:59[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 13200 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 16:25:59[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 16:26:00[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:26:01[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 16:26:02[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 16:26:02[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:26:02[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 16:26:02[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 16:26:02[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 16:26:02[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2729 ms
INFO  23-06-12 16:26:03[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 16:26:03[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 16:26:03[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 16:26:03[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 16:26:03[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 16:26:03[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 16:26:04[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 16:26:04[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 16:26:05[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 16:26:07[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 16:26:07[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 16:26:07[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 16:26:07[main] [AppInfoParser:121] - Kafka startTimeMs: 1686554767316
INFO  23-06-12 16:26:07[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 16:26:07[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:26:07[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 16:26:08[main] [ApiApplication:61] - Started ApiApplication in 8.71 seconds (JVM running for 9.488)
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=141, memberId='consumer-foo-1-a6a4ea9d-d38b-4534-a18b-6fe5dbdf8d2c', protocol='range'}
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 141: {consumer-foo-1-a6a4ea9d-d38b-4534-a18b-6fe5dbdf8d2c=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=141, memberId='consumer-foo-1-a6a4ea9d-d38b-4534-a18b-6fe5dbdf8d2c', protocol='range'}
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:26:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:27:37[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 16:27:37[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 16:27:37[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 16:28:17[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@2b2fbfd3], created=2023-06-12T16:28:14.019872600)"; line: 1, column: 5]
INFO  23-06-12 16:29:26[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@4e61c253], created=2023-06-12T16:29:23.916320400)')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
WARN  23-06-12 16:33:12[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m8s743ms635µs300ns).
INFO  23-06-12 16:33:12[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:33:13[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@4e61c253], created=2023-06-12T16:29:23.916320400)')
 at [Source: (String)""Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@4e61c253], created=2023-06-12T16:29:23.916320400)""; line: 1, column: 1]
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=141, memberId='consumer-foo-1-a6a4ea9d-d38b-4534-a18b-6fe5dbdf8d2c', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=143, memberId='consumer-foo-1-75352d78-1021-43b4-abc0-b255d8890a39', protocol='range'}
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 143: {consumer-foo-1-75352d78-1021-43b4-abc0-b255d8890a39=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=143, memberId='consumer-foo-1-75352d78-1021-43b4-abc0-b255d8890a39', protocol='range'}
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:33:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:33:20[http-nio-8090-exec-8] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@4f38b0b2], created=2023-06-12T16:33:19.040621200)')
 at [Source: (String)""Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@4f38b0b2], created=2023-06-12T16:33:19.040621200)""; line: 1, column: 1]
INFO  23-06-12 16:35:34[http-nio-8090-exec-10] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@64daea7c], created=2023-06-12T16:35:32.535123800)"; line: 1, column: 5]
INFO  23-06-12 16:37:11[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@7f808a26], created=2023-06-12T16:37:10.288262400)"; line: 1, column: 5]
INFO  23-06-12 16:41:33[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.core.JsonParseException: Unrecognized token 'Cart': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@86150e4], created=2023-06-12T16:41:32.350345100)"; line: 1, column: 5]
INFO  23-06-12 16:41:55[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@c1d3764], created=2023-06-12T16:41:54.264629)')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:42:24[http-nio-8090-exec-6] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `java.util.LinkedHashMap` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('Cart(memberId=1, member=Member(memberId=1, name=string, birth=0, password=string, role=ROLE_ADMIN), ea=1, cartItems=[web.api.eventSourcing.model.CartItem@7b027bcd], created=2023-06-12T16:42:24.926786900)')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-75352d78-1021-43b4-abc0-b255d8890a39 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 16:45:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 16:45:54[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 16:45:54[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 16:45:54[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 16:47:47[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 9184 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 16:47:47[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 28 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 16:47:48[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 14 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 16:47:49[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 16:47:49[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:47:49[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 16:47:49[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 16:47:50[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 16:47:50[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2410 ms
INFO  23-06-12 16:47:50[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 16:47:50[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 16:47:50[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 16:47:50[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 16:47:50[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 16:47:50[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
WARN  23-06-12 16:47:51[main] [SqlExceptionHelper:230] - SQL Warning Code: 0, SQLState: 00000
WARN  23-06-12 16:47:51[main] [SqlExceptionHelper:231] - drop cascades to constraint fk2csrj61ygmjdy3v4lhxixuvrw on table snapshot
INFO  23-06-12 16:47:51[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 16:47:51[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 16:47:52[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 16:47:54[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 16:47:54[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 16:47:54[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 16:47:54[main] [AppInfoParser:121] - Kafka startTimeMs: 1686556074734
INFO  23-06-12 16:47:54[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 16:47:54[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 16:47:54[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 16:47:55[main] [ApiApplication:61] - Started ApiApplication in 8.45 seconds (JVM running for 9.21)
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=145, memberId='consumer-foo-1-387a2abc-b5ac-4228-bd85-d62ea3e6fa9c', protocol='range'}
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 145: {consumer-foo-1-387a2abc-b5ac-4228-bd85-d62ea3e6fa9c=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=145, memberId='consumer-foo-1-387a2abc-b5ac-4228-bd85-d62ea3e6fa9c', protocol='range'}
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:47:56[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:48:25[http-nio-8090-exec-3] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 16:48:25[http-nio-8090-exec-3] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 16:48:25[http-nio-8090-exec-3] [DispatcherServlet:547] - Completed initialization in 1 ms
ERROR 23-06-12 16:48:30[http-nio-8090-exec-2] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:48:30[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:48:31[http-nio-8090-exec-1] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:48:31[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:48:31[http-nio-8090-exec-4] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:48:31[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:48:57[http-nio-8090-exec-5] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:48:57[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:49:05[http-nio-8090-exec-6] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:49:05[http-nio-8090-exec-6] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:49:13[http-nio-8090-exec-7] [AbstractEventHandler:80] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:49:13[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.event.model.CartRawEvent.getIdentifier()" because "rawEvent" is null
ERROR 23-06-12 16:50:21[http-nio-8090-exec-9] [AbstractEventHandler:79] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
WARN  23-06-12 16:50:37[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s298ms126µs700ns).
INFO  23-06-12 16:50:37[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=145, memberId='consumer-foo-1-387a2abc-b5ac-4228-bd85-d62ea3e6fa9c', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=147, memberId='consumer-foo-1-5ac5615a-ed4c-49f7-8062-fd61805a03cb', protocol='range'}
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 147: {consumer-foo-1-5ac5615a-ed4c-49f7-8062-fd61805a03cb=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=147, memberId='consumer-foo-1-5ac5615a-ed4c-49f7-8062-fd61805a03cb', protocol='range'}
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:50:42[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
ERROR 23-06-12 16:51:54[http-nio-8090-exec-3] [AbstractEventHandler:79] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:52:13[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=147, memberId='consumer-foo-1-5ac5615a-ed4c-49f7-8062-fd61805a03cb', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=149, memberId='consumer-foo-1-cdd5799b-7482-4ef3-b843-ac7957d1fd4b', protocol='range'}
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 149: {consumer-foo-1-cdd5799b-7482-4ef3-b843-ac7957d1fd4b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=149, memberId='consumer-foo-1-cdd5799b-7482-4ef3-b843-ac7957d1fd4b', protocol='range'}
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:52:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:54:05[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
WARN  23-06-12 16:54:05[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m52s306ms228µs700ns).
ERROR 23-06-12 16:54:05[http-nio-8090-exec-2] [AbstractEventHandler:79] - Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: web.api.eventSourcing.model.Cart["created"])
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:54:05[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot coerce empty String ("") to `web.api.eventSourcing.model.Cart` value (but could if coercion was enabled using `CoercionConfig`)
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=149, memberId='consumer-foo-1-cdd5799b-7482-4ef3-b843-ac7957d1fd4b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=151, memberId='consumer-foo-1-ff0dbd51-b713-48fe-adde-80d2ff00371e', protocol='range'}
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 151: {consumer-foo-1-ff0dbd51-b713-48fe-adde-80d2ff00371e=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=151, memberId='consumer-foo-1-ff0dbd51-b713-48fe-adde-80d2ff00371e', protocol='range'}
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:54:05[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:54:16[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,9,872060500]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:30[http-nio-8090-exec-4] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,27,59124000]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:31[http-nio-8090-exec-5] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,31,966855900]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:34[http-nio-8090-exec-6] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,34,444078100]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:35[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,35,106297400]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:35[http-nio-8090-exec-8] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,35,831854600]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:50[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:54:50[http-nio-8090-exec-9] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,39,856101200]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=151, memberId='consumer-foo-1-ff0dbd51-b713-48fe-adde-80d2ff00371e', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=153, memberId='consumer-foo-1-80c2d3e2-86ad-4795-b650-ba2d4b7abe32', protocol='range'}
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 153: {consumer-foo-1-80c2d3e2-86ad-4795-b650-ba2d4b7abe32=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=153, memberId='consumer-foo-1-80c2d3e2-86ad-4795-b650-ba2d4b7abe32', protocol='range'}
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:54:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:55:10[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 16:55:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=153, memberId='consumer-foo-1-80c2d3e2-86ad-4795-b650-ba2d4b7abe32', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 16:55:11[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 16:55:16[http-nio-8090-exec-10] [ExceptHandler:31] - ExceptHandler.commonException = Cannot construct instance of `web.api.eventSourcing.model.Cart` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,54,51,573285100]}')
 at [Source: UNKNOWN; byte offset: #UNKNOWN]
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=155, memberId='consumer-foo-1-5ffe0d5e-5b5d-450b-b6bf-a810bb1b310b', protocol='range'}
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 155: {consumer-foo-1-5ffe0d5e-5b5d-450b-b6bf-a810bb1b310b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=155, memberId='consumer-foo-1-5ffe0d5e-5b5d-450b-b6bf-a810bb1b310b', protocol='range'}
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 16:55:16[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 16:56:15[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `web.api.eventSourcing.model.CartItem` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (String)"{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,56,12,629053600]}"; line: 1, column: 126] (through reference chain: web.api.eventSourcing.model.Cart["cartItems"]->java.util.HashSet[0])
INFO  23-06-12 16:56:57[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `web.api.eventSourcing.model.CartItem` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (String)"{"memberId":1,"member":{"memberId":1,"name":"string","birth":0,"password":"string","role":"ROLE_ADMIN"},"ea":1,"cartItems":[{"product":{"productId":1,"name":"바나나","ea":10},"ea":1}],"created":[2023,6,12,16,56,53,624396800]}"; line: 1, column: 126] (through reference chain: web.api.eventSourcing.model.Cart["cartItems"]->java.util.HashSet[0])
WARN  23-06-12 17:00:37[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=57s355ms194µs800ns).
INFO  23-06-12 17:00:37[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=155, memberId='consumer-foo-1-5ffe0d5e-5b5d-450b-b6bf-a810bb1b310b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:00:38[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=157, memberId='consumer-foo-1-8abcc43d-28ad-42ce-a733-bd916702e792', protocol='range'}
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 157: {consumer-foo-1-8abcc43d-28ad-42ce-a733-bd916702e792=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=157, memberId='consumer-foo-1-8abcc43d-28ad-42ce-a733-bd916702e792', protocol='range'}
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:00:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:00:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:00:40[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
WARN  23-06-12 17:04:03[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m25s646ms125µs300ns).
INFO  23-06-12 17:04:03[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=157, memberId='consumer-foo-1-8abcc43d-28ad-42ce-a733-bd916702e792', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=159, memberId='consumer-foo-1-a25d9ba6-b971-495a-910e-5d1c2c371105', protocol='range'}
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 159: {consumer-foo-1-a25d9ba6-b971-495a-910e-5d1c2c371105=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=159, memberId='consumer-foo-1-a25d9ba6-b971-495a-910e-5d1c2c371105', protocol='range'}
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:04:03[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-a25d9ba6-b971-495a-910e-5d1c2c371105 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:04:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:04:22[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:04:22[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:04:22[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:04:24[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42968 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:04:24[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 107 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:04:25[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 14 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:04:26[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:04:26[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:04:26[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:04:26[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:04:27[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:04:27[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2528 ms
INFO  23-06-12 17:04:27[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:04:27[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:04:27[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:04:27[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:04:27[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:04:28[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:04:28[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:04:28[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:04:29[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:04:31[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:04:31[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:04:31[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:04:31[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557071933
INFO  23-06-12 17:04:31[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:04:31[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:04:31[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:04:32[http-nio-8090-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:04:32[http-nio-8090-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:04:32[http-nio-8090-exec-2] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-12 17:04:32[main] [ApiApplication:61] - Started ApiApplication in 8.699 seconds (JVM running for 9.554)
INFO  23-06-12 17:04:33[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.model.Product.getProductId()" because "readProduct" is null
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=161, memberId='consumer-foo-1-19715098-afba-4a11-84f1-a81600b0e65b', protocol='range'}
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 161: {consumer-foo-1-19715098-afba-4a11-84f1-a81600b0e65b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=161, memberId='consumer-foo-1-19715098-afba-4a11-84f1-a81600b0e65b', protocol='range'}
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:04:33[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:04:35[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.model.Product.getProductId()" because "readProduct" is null
INFO  23-06-12 17:04:38[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.model.Product.getProductId()" because "readProduct" is null
INFO  23-06-12 17:04:39[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = Cannot invoke "web.api.eventSourcing.model.Product.getProductId()" because "readProduct" is null
INFO  23-06-12 17:05:26[http-nio-8090-exec-9] [ExceptHandler:31] - ExceptHandler.commonException = class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
INFO  23-06-12 17:05:52[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:05:52[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=161, memberId='consumer-foo-1-19715098-afba-4a11-84f1-a81600b0e65b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=163, memberId='consumer-foo-1-2cd2f3a5-109e-41ac-a527-5d496e9c2fba', protocol='range'}
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 163: {consumer-foo-1-2cd2f3a5-109e-41ac-a527-5d496e9c2fba=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=163, memberId='consumer-foo-1-2cd2f3a5-109e-41ac-a527-5d496e9c2fba', protocol='range'}
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:05:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:06:21[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:06:21[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=163, memberId='consumer-foo-1-2cd2f3a5-109e-41ac-a527-5d496e9c2fba', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=165, memberId='consumer-foo-1-1171c7db-61b2-4074-b1e8-435d25ff50e0', protocol='range'}
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 165: {consumer-foo-1-1171c7db-61b2-4074-b1e8-435d25ff50e0=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=165, memberId='consumer-foo-1-1171c7db-61b2-4074-b1e8-435d25ff50e0', protocol='range'}
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:06:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:06:24[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
INFO  23-06-12 17:07:10[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:07:10[http-nio-8090-exec-7] [ExceptHandler:31] - ExceptHandler.commonException = class java.lang.Integer cannot be cast to class java.lang.String (java.lang.Integer and java.lang.String are in module java.base of loader 'bootstrap')
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [FetchSessionHandler:481] - [Consumer clientId=consumer-foo-1, groupId=foo] Error sending fetch request (sessionId=263580293, epoch=166) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=165, memberId='consumer-foo-1-1171c7db-61b2-4074-b1e8-435d25ff50e0', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=167, memberId='consumer-foo-1-503dc34f-f02c-416f-9c0d-88747a010609', protocol='range'}
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 167: {consumer-foo-1-503dc34f-f02c-416f-9c0d-88747a010609=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=167, memberId='consumer-foo-1-503dc34f-f02c-416f-9c0d-88747a010609', protocol='range'}
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:07:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-503dc34f-f02c-416f-9c0d-88747a010609 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:07:13[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:07:13[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:07:13[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:07:13[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:07:15[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 42608 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:07:15[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:07:16[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 24 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:07:17[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:07:17[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:07:17[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:07:17[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:07:18[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:07:18[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2454 ms
INFO  23-06-12 17:07:18[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:07:18[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:07:18[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:07:18[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:07:18[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:07:18[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:07:19[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:07:19[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:07:20[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:07:22[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:07:22[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:07:22[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:07:22[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557242585
INFO  23-06-12 17:07:22[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:07:22[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:07:22[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:07:23[main] [ApiApplication:61] - Started ApiApplication in 8.3 seconds (JVM running for 9.195)
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=169, memberId='consumer-foo-1-9fff4598-0abf-4e7c-a7a6-30d5855fd18a', protocol='range'}
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 169: {consumer-foo-1-9fff4598-0abf-4e7c-a7a6-30d5855fd18a=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=169, memberId='consumer-foo-1-9fff4598-0abf-4e7c-a7a6-30d5855fd18a', protocol='range'}
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:07:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:07:25[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:07:25[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:07:25[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-9fff4598-0abf-4e7c-a7a6-30d5855fd18a sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:08:25[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:08:25[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:08:25[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:08:25[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:08:27[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 15804 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:08:27[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 135 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:08:28[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:08:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:08:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:08:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:08:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:08:30[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:08:30[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2556 ms
INFO  23-06-12 17:08:30[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:08:30[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:08:30[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:08:31[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:08:31[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:08:31[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:08:31[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:08:31[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:08:32[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:08:34[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:08:34[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:08:34[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:08:34[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557314974
INFO  23-06-12 17:08:34[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:08:34[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:08:35[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:08:35[main] [ApiApplication:61] - Started ApiApplication in 8.461 seconds (JVM running for 9.469)
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=171, memberId='consumer-foo-1-f927a3db-d002-46a6-9f85-a8302023099b', protocol='range'}
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 171: {consumer-foo-1-f927a3db-d002-46a6-9f85-a8302023099b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=171, memberId='consumer-foo-1-f927a3db-d002-46a6-9f85-a8302023099b', protocol='range'}
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:08:36[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:08:37[http-nio-8090-exec-3] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:08:37[http-nio-8090-exec-3] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:08:37[http-nio-8090-exec-3] [DispatcherServlet:547] - Completed initialization in 1 ms
WARN  23-06-12 17:09:22[HikariPool-1 housekeeper] [HikariPool:788] - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=51s45ms156µs200ns).
INFO  23-06-12 17:09:22[kafka-coordinator-heartbeat-thread | foo] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:09:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:09:22[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:904] - [Consumer clientId=consumer-foo-1, groupId=foo] Group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: false. Rediscovery will be attempted.
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1121] - [Consumer clientId=consumer-foo-1, groupId=foo] Attempt to heartbeat with Generation{generationId=171, memberId='consumer-foo-1-f927a3db-d002-46a6-9f85-a8302023099b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:691] - [Consumer clientId=consumer-foo-1, groupId=foo] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:326] - [Consumer clientId=consumer-foo-1, groupId=foo] Lost previously assigned partitions my1-topic-0
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions lost: [my1-topic-0]
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=173, memberId='consumer-foo-1-0d85b592-d61f-4148-99c7-d02d17e36a63', protocol='range'}
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 173: {consumer-foo-1-0d85b592-d61f-4148-99c7-d02d17e36a63=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=173, memberId='consumer-foo-1-0d85b592-d61f-4148-99c7-d02d17e36a63', protocol='range'}
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:09:23[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-0d85b592-d61f-4148-99c7-d02d17e36a63 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:12:43[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:12:43[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:12:43[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:12:43[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:12:45[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 39788 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:12:45[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 29 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 114 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:12:46[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 17 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:12:47[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:12:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:12:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:12:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:12:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:12:47[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2427 ms
INFO  23-06-12 17:12:48[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:12:48[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:12:48[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:12:48[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:12:48[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:12:48[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:12:49[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:12:49[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:12:50[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:12:52[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:12:52[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:12:52[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:12:52[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557572123
INFO  23-06-12 17:12:52[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:12:52[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:12:52[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:12:52[main] [ApiApplication:61] - Started ApiApplication in 7.941 seconds (JVM running for 8.847)
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=175, memberId='consumer-foo-1-1276127d-7657-441c-8e8f-3c61ad68adcf', protocol='range'}
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 175: {consumer-foo-1-1276127d-7657-441c-8e8f-3c61ad68adcf=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=175, memberId='consumer-foo-1-1276127d-7657-441c-8e8f-3c61ad68adcf', protocol='range'}
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:12:52[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:12:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:12:53[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:12:53[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:12:53[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:12:53[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 17:12:53[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = No property 'desc' found for type 'Long'; Traversed path: Snapshot.seq
INFO  23-06-12 17:12:56[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = No property 'desc' found for type 'Long'; Traversed path: Snapshot.seq
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-1276127d-7657-441c-8e8f-3c61ad68adcf sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:14:50[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:14:50[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:14:50[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:14:50[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:14:52[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 7008 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:14:52[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 116 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:14:53[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 20 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:14:54[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:14:54[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:14:54[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:14:54[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:14:55[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:14:55[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2488 ms
INFO  23-06-12 17:14:55[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:14:55[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:14:55[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:14:55[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:14:55[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:14:55[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:14:56[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:14:56[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:14:57[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:14:58[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:14:59[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:14:59[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:14:59[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557699134
INFO  23-06-12 17:14:59[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:14:59[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:14:59[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:14:59[main] [ApiApplication:61] - Started ApiApplication in 7.793 seconds (JVM running for 8.844)
INFO  23-06-12 17:14:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:14:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:14:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=177, memberId='consumer-foo-1-105f287d-7896-4d53-8b68-051687cfbfcc', protocol='range'}
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 177: {consumer-foo-1-105f287d-7896-4d53-8b68-051687cfbfcc=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=177, memberId='consumer-foo-1-105f287d-7896-4d53-8b68-051687cfbfcc', protocol='range'}
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:15:00[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:15:00[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:15:00[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:15:00[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-105f287d-7896-4d53-8b68-051687cfbfcc sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:15:27[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:15:27[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:15:27[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:15:27[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:15:29[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 5572 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:15:29[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 110 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:30[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:15:31[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:15:31[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:15:31[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:15:31[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:15:31[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:15:31[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2398 ms
INFO  23-06-12 17:15:32[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:15:32[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:15:32[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:15:32[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:15:32[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:15:32[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:15:33[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:15:33[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:15:34[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:15:36[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:15:36[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:15:36[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:15:36[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557736320
INFO  23-06-12 17:15:36[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:15:36[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:15:36[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:15:37[main] [ApiApplication:61] - Started ApiApplication in 8.049 seconds (JVM running for 8.886)
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=179, memberId='consumer-foo-1-54000a02-a413-419c-8ef0-e9985ce34a59', protocol='range'}
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 179: {consumer-foo-1-54000a02-a413-419c-8ef0-e9985ce34a59=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=179, memberId='consumer-foo-1-54000a02-a413-419c-8ef0-e9985ce34a59', protocol='range'}
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:15:37[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-54000a02-a413-419c-8ef0-e9985ce34a59 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:15:39[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:15:39[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:15:39[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:15:39[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:15:41[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32560 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:15:41[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:15:42[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 24 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:15:43[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:15:43[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:15:43[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:15:43[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:15:44[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:15:44[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2690 ms
INFO  23-06-12 17:15:44[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:15:44[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:15:44[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:15:44[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:15:44[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:15:45[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:15:45[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:15:45[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:15:46[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:15:48[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:15:48[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:15:48[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:15:48[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557748245
INFO  23-06-12 17:15:48[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:15:48[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:15:48[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:15:48[main] [ApiApplication:61] - Started ApiApplication in 7.994 seconds (JVM running for 8.817)
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=181, memberId='consumer-foo-1-f079a05d-d12e-4123-b9f8-80094d2a0fb4', protocol='range'}
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 181: {consumer-foo-1-f079a05d-d12e-4123-b9f8-80094d2a0fb4=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=181, memberId='consumer-foo-1-f079a05d-d12e-4123-b9f8-80094d2a0fb4', protocol='range'}
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:15:49[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:15:49[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:15:49[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:15:49[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-12 17:15:49[http-nio-8090-exec-1] [ExceptHandler:31] - ExceptHandler.commonException = No property 'identifier' found for type 'Long'; Traversed path: Snapshot.seq
INFO  23-06-12 17:15:51[http-nio-8090-exec-2] [ExceptHandler:31] - ExceptHandler.commonException = No property 'identifier' found for type 'Long'; Traversed path: Snapshot.seq
INFO  23-06-12 17:15:54[http-nio-8090-exec-3] [ExceptHandler:31] - ExceptHandler.commonException = No property 'identifier' found for type 'Long'; Traversed path: Snapshot.seq
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-f079a05d-d12e-4123-b9f8-80094d2a0fb4 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:16:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:16:21[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:16:21[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:16:21[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:16:22[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 28840 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:16:22[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 33 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 108 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:23[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 13 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:16:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:16:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:16:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:16:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:16:25[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:16:25[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2413 ms
INFO  23-06-12 17:16:25[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:16:25[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:16:25[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:16:26[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:16:26[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:16:26[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:16:26[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:16:26[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:16:27[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:16:29[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:16:29[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:16:29[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:16:29[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557789805
INFO  23-06-12 17:16:29[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:16:29[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:16:29[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:16:30[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:16:30[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:16:30[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 2 ms
INFO  23-06-12 17:16:30[main] [ApiApplication:61] - Started ApiApplication in 8.346 seconds (JVM running for 9.236)
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=183, memberId='consumer-foo-1-15ce5915-a5a3-48b7-9d49-8da368171bcc', protocol='range'}
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 183: {consumer-foo-1-15ce5915-a5a3-48b7-9d49-8da368171bcc=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=183, memberId='consumer-foo-1-15ce5915-a5a3-48b7-9d49-8da368171bcc', protocol='range'}
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:16:31[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-15ce5915-a5a3-48b7-9d49-8da368171bcc sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:16:54[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:16:54[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:16:54[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:16:54[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:16:56[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 37752 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:16:56[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 126 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:16:57[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 19 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:16:58[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:16:58[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:16:58[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:16:58[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:16:58[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:16:58[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2445 ms
INFO  23-06-12 17:16:59[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:16:59[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:16:59[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:16:59[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:16:59[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:16:59[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:17:00[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:17:00[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:17:01[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:17:02[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:17:02[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:17:02[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:17:02[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557822846
INFO  23-06-12 17:17:02[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:17:02[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:17:02[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:17:03[main] [ApiApplication:61] - Started ApiApplication in 7.931 seconds (JVM running for 8.803)
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=185, memberId='consumer-foo-1-c220bb3c-42f4-4158-9b1d-2ca1f13b7108', protocol='range'}
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 185: {consumer-foo-1-c220bb3c-42f4-4158-9b1d-2ca1f13b7108=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=185, memberId='consumer-foo-1-c220bb3c-42f4-4158-9b1d-2ca1f13b7108', protocol='range'}
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:17:04[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-c220bb3c-42f4-4158-9b1d-2ca1f13b7108 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:17:10[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:17:10[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:17:10[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:17:10[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:17:13[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 32184 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:17:13[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 31 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 120 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:17:14[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 18 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:17:15[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:17:15[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:17:15[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:17:15[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:17:16[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:17:16[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2689 ms
INFO  23-06-12 17:17:16[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:17:16[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:17:16[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:17:16[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:17:16[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:17:16[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:17:17[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:17:17[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:17:18[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:17:20[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:17:20[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:17:20[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:17:20[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557840648
INFO  23-06-12 17:17:20[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:17:20[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:17:20[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:17:21[main] [ApiApplication:61] - Started ApiApplication in 8.732 seconds (JVM running for 9.596)
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=187, memberId='consumer-foo-1-1e099daf-ccbd-4630-881e-86f06f779945', protocol='range'}
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 187: {consumer-foo-1-1e099daf-ccbd-4630-881e-86f06f779945=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=187, memberId='consumer-foo-1-1e099daf-ccbd-4630-881e-86f06f779945', protocol='range'}
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:17:21[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:307] - [Consumer clientId=consumer-foo-1, groupId=foo] Revoke previously assigned partitions my1-topic-0
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions revoked: [my1-topic-0]
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:1029] - [Consumer clientId=consumer-foo-1, groupId=foo] Member consumer-foo-1-1e099daf-ccbd-4630-881e-86f06f779945 sending LeaveGroup request to coordinator 127.0.0.1:9092 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaConsumer:1070] - [Consumer clientId=consumer-foo-1, groupId=foo] Unsubscribed all topics or patterns and assigned partitions
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:668] - Metrics scheduler closed
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:672] - Closing reporter org.apache.kafka.common.metrics.JmxReporter
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metrics:678] - Metrics reporters closed
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AppInfoParser:83] - App info kafka.consumer for consumer-foo-1 unregistered
INFO  23-06-12 17:17:59[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: Consumer stopped
INFO  23-06-12 17:17:59[SpringApplicationShutdownHook] [LocalContainerEntityManagerFactoryBean:651] - Closing JPA EntityManagerFactory for persistence unit 'default'
INFO  23-06-12 17:17:59[SpringApplicationShutdownHook] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  23-06-12 17:17:59[SpringApplicationShutdownHook] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  23-06-12 17:18:01[main] [ApiApplication:55] - Starting ApiApplication using Java 17.0.3 on limdoyoung with PID 24160 (C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample\target\classes started by dlaeh in C:\Users\dlaeh\workSpaces\spring-event-sourcing-sample)
INFO  23-06-12 17:18:01[main] [ApiApplication:631] - No active profile set, falling back to 1 default profile: "default"
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 27 ms. Found 0 JDBC repository interfaces.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data JPA - Could not safely identify store assignment for repository candidate interface web.api.repository.SnapshotRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: javax.persistence.Entity, javax.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 129 ms. Found 3 JPA repository interfaces.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:262] - Multiple Spring Data modules found, entering strict repository configuration mode
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:132] - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.eventSourcing.event.EventStore; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.EventStoreRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.MemberJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationExtensionSupport:349] - Spring Data Redis - Could not safely identify store assignment for repository candidate interface web.api.repository.ProductJpaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
INFO  23-06-12 17:18:02[main] [RepositoryConfigurationDelegate:201] - Finished Spring Data repository scanning in 15 ms. Found 1 Redis repository interfaces.
INFO  23-06-12 17:18:03[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8090 (http)
INFO  23-06-12 17:18:03[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:18:03[main] [StandardService:173] - Starting service [Tomcat]
INFO  23-06-12 17:18:03[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.71]
INFO  23-06-12 17:18:03[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  23-06-12 17:18:03[main] [ServletWebServerApplicationContext:292] - Root WebApplicationContext: initialization completed in 2653 ms
INFO  23-06-12 17:18:04[main] [LogHelper:31] - HHH000204: Processing PersistenceUnitInfo [name: default]
INFO  23-06-12 17:18:04[main] [Version:44] - HHH000412: Hibernate ORM core version 5.6.15.Final
INFO  23-06-12 17:18:04[main] [Version:56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
INFO  23-06-12 17:18:04[main] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  23-06-12 17:18:04[main] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  23-06-12 17:18:04[main] [Dialect:175] - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
INFO  23-06-12 17:18:05[main] [JtaPlatformInitiator:52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
INFO  23-06-12 17:18:05[main] [LocalContainerEntityManagerFactoryBean:437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
WARN  23-06-12 17:18:06[main] [JpaBaseConfiguration$JpaWebConfiguration:223] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
INFO  23-06-12 17:18:08[main] [ConsumerConfig:361] - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = earliest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-foo-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = foo
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

INFO  23-06-12 17:18:08[main] [AppInfoParser:119] - Kafka version: 2.7.0
INFO  23-06-12 17:18:08[main] [AppInfoParser:120] - Kafka commitId: 448719dc99a19793
INFO  23-06-12 17:18:08[main] [AppInfoParser:121] - Kafka startTimeMs: 1686557888175
INFO  23-06-12 17:18:08[main] [KafkaConsumer:961] - [Consumer clientId=consumer-foo-1, groupId=foo] Subscribed to topic(s): my1-topic
INFO  23-06-12 17:18:08[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8090"]
INFO  23-06-12 17:18:08[main] [TomcatWebServer:220] - Tomcat started on port(s): 8090 (http) with context path ''
INFO  23-06-12 17:18:08[main] [ApiApplication:61] - Started ApiApplication in 8.044 seconds (JVM running for 8.855)
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [Metadata:279] - [Consumer clientId=consumer-foo-1, groupId=foo] Cluster ID: sHUSsb60QyipALfy4nRqJw
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:847] - [Consumer clientId=consumer-foo-1, groupId=foo] Discovered group coordinator 127.0.0.1:9092 (id: 2147482646 rack: null)
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:540] - [Consumer clientId=consumer-foo-1, groupId=foo] (Re-)joining group
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:596] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully joined group with generation Generation{generationId=189, memberId='consumer-foo-1-e07b06ef-b0c4-4b8d-aa84-fb2453bf0a4b', protocol='range'}
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:626] - [Consumer clientId=consumer-foo-1, groupId=foo] Finished assignment for group at generation 189: {consumer-foo-1-e07b06ef-b0c4-4b8d-aa84-fb2453bf0a4b=Assignment(partitions=[my1-topic-0])}
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [AbstractCoordinator:756] - [Consumer clientId=consumer-foo-1, groupId=foo] Successfully synced group in generation Generation{generationId=189, memberId='consumer-foo-1-e07b06ef-b0c4-4b8d-aa84-fb2453bf0a4b', protocol='range'}
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:276] - [Consumer clientId=consumer-foo-1, groupId=foo] Notifying assignor about the new Assignment(partitions=[my1-topic-0])
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:288] - [Consumer clientId=consumer-foo-1, groupId=foo] Adding newly assigned partitions: my1-topic-0
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [ConsumerCoordinator:820] - [Consumer clientId=consumer-foo-1, groupId=foo] Setting offset for partition my1-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[127.0.0.1:9092 (id: 1001 rack: null)], epoch=0}}
INFO  23-06-12 17:18:08[org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [KafkaMessageListenerContainer:292] - foo: partitions assigned: [my1-topic-0]
INFO  23-06-12 17:18:09[http-nio-8090-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  23-06-12 17:18:09[http-nio-8090-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  23-06-12 17:18:09[http-nio-8090-exec-1] [DispatcherServlet:547] - Completed initialization in 1 ms
